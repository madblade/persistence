(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1:function(e,t,n){(e.exports=n(5)(!1)).push([e.i,"body {\r\n    background-color: blue;\r\n    color: #000;\r\n    margin: 0;\r\n    overflow: hidden;\r\n}\r\n\r\n#info {\r\n    color: #000;\r\n    position: absolute;\r\n    top: 10px;\r\n    width: 100%;\r\n    text-align: center;\r\n    display: block;\r\n}\r\n\r\n#info a, .button {\r\n    color: #f00;\r\n    font-weight: bold;\r\n    text-decoration: underline;\r\n    cursor: pointer\r\n}\r\n\r\ni {\r\n    border: solid black;\r\n    border-width: 0 3px 3px 0;\r\n    display: inline-block;\r\n    padding: 3px;\r\n}\r\n\r\n.right {\r\n    transform: rotate(-45deg);\r\n    -webkit-transform: rotate(-45deg);\r\n}\r\n\r\n.left {\r\n    transform: rotate(135deg);\r\n    -webkit-transform: rotate(135deg);\r\n}\r\n\r\n.button-wrapper {\r\n    position: absolute;\r\n    height: 100%;\r\n    z-index: 3;\r\n    display: table;\r\n    width: 40px;\r\n}\r\n\r\n.button-wrapper-right {\r\n    right: 0;\r\n}\r\n\r\n.button-wrapper-left {\r\n    left: 0;\r\n}\r\n\r\n.button-verticalizer {\r\n    vertical-align: middle;\r\n    display: table-cell;\r\n}\r\n\r\n#leftbutton {\r\n    display: inline-block;\r\n    width: 40px;\r\n    height: 80px;\r\n    z-index: 3;\r\n}\r\n\r\n#rightbutton {\r\n    display: inline-block;\r\n    width: 40px;\r\n    height: 80px;\r\n    z-index: 3;\r\n}\r\n\r\n#explainer {\r\n    position: absolute;\r\n    z-index: 2;\r\n    width: 100%;\r\n    bottom: 0;\r\n    height: 100px;\r\n}\r\n\r\n#explainer-text {\r\n    margin: 0 45px;\r\n    text-align: center;\r\n    font-size: 20pt;\r\n}\r\n\r\n@media (max-width: 600px) {\r\n    #explainer-text {\r\n        margin: 0 45px;\r\n        text-align: center;\r\n        font-size: 15pt;\r\n    }\r\n}\r\n",""])},4:function(e,t,n){var l=n(1);"string"==typeof l&&(l=[[e.i,l,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0},a=n(6)(l,i);l.locals&&(e.exports=l.locals),e.hot.accept(1,function(){var t=n(1);if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,l=0;for(n in e){if(!t||e[n]!==t[n])return!1;l++}for(n in t)l--;return 0===l}(l.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");a(t)}),e.hot.dispose(function(){a()})},8:function(e,t,n){"use strict";n.r(t);n(4);var l=n(0),i=function(e,t){var n,i,a,o,r;this.object=e,this.domElement=void 0!==t?t:document,this.enabled=!0,this.target=new l.N,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.25,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.enableKeys=!1,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={LEFT:l.s.LEFT,MIDDLE:l.s.MIDDLE,RIGHT:l.s.RIGHT},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=function(){return x.phi},this.getAzimuthalAngle=function(){return x.theta},this.saveState=function(){s.target0.copy(s.target),s.position0.copy(s.object.position),s.zoom0=s.object.zoom},this.reset=function(){s.target.copy(s.target0),s.object.position.copy(s.position0),s.object.zoom=s.zoom0,s.object.updateProjectionMatrix(),s.dispatchEvent(q),s.update(),d=u.NONE},this.update=(n=new l.N,i=(new l.B).setFromUnitVectors(e.up,new l.N(0,1,0)),a=i.clone().inverse(),o=new l.N,r=new l.B,function(){var e=s.object.position;return n.copy(e).sub(s.target),n.applyQuaternion(i),x.setFromVector3(n),s.autoRotate&&d===u.NONE&&z(2*Math.PI/60/60*s.autoRotateSpeed),x.theta+=c.theta,x.phi+=c.phi,x.theta=Math.max(s.minAzimuthAngle,Math.min(s.maxAzimuthAngle,x.theta)),x.phi=Math.max(s.minPolarAngle,Math.min(s.maxPolarAngle,x.phi)),x.makeSafe(),x.radius*=f,x.radius=Math.max(s.minDistance,Math.min(s.maxDistance,x.radius)),s.target.add(g),n.setFromSpherical(x),n.applyQuaternion(a),e.copy(s.target).add(n),s.object.lookAt(s.target),!0===s.enableDamping?(c.theta*=1-s.dampingFactor,c.phi*=1-s.dampingFactor,g.multiplyScalar(1-s.dampingFactor)):(c.set(0,0,0),g.set(0,0,0)),f=1,!!(_||o.distanceToSquared(s.object.position)>p||8*(1-r.dot(s.object.quaternion))>p)&&(s.dispatchEvent(q),o.copy(s.object.position),r.copy(s.object.quaternion),_=!1,!0)}),this.dispose=function(){s.domElement.removeEventListener("contextmenu",Z,!1),s.domElement.removeEventListener("mousedown",F,!1),s.domElement.removeEventListener("wheel",U,!1),s.domElement.removeEventListener("touchstart",Y,!1),s.domElement.removeEventListener("touchend",V,!1),s.domElement.removeEventListener("touchmove",B,!1),document.removeEventListener("mousemove",R,!1),document.removeEventListener("mouseup",H,!1),window.removeEventListener("keydown",W,!1)};var s=this,q={type:"change"},m={type:"start"},h={type:"end"},u={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY_PAN:4},d=u.NONE,p=1e-6,x=new l.I,c=new l.I,f=1,g=new l.N,_=!1,w=new l.M,v=new l.M,y=new l.M,b=new l.M,T=new l.M,A=new l.M,k=new l.M,C=new l.M,M=new l.M;function N(){return Math.pow(.95,s.zoomSpeed)}function z(e){c.theta-=e}function S(e){c.phi-=e}var E,P=(E=new l.N,function(e,t){E.setFromMatrixColumn(t,0),E.multiplyScalar(-e),g.add(E)}),O=function(){var e=new l.N;return function(t,n){!0===s.screenSpacePanning?e.setFromMatrixColumn(n,1):(e.setFromMatrixColumn(n,0),e.crossVectors(s.object.up,e)),e.multiplyScalar(t),g.add(e)}}(),I=function(){var e=new l.N;return function(t,n){var l=s.domElement===document?s.domElement.body:s.domElement;if(s.object.isPerspectiveCamera){var i=s.object.position;e.copy(i).sub(s.target);var a=e.length();a*=Math.tan(s.object.fov/2*Math.PI/180),P(2*t*a/l.clientHeight,s.object.matrix),O(2*n*a/l.clientHeight,s.object.matrix)}else s.object.isOrthographicCamera?(P(t*(s.object.right-s.object.left)/s.object.zoom/l.clientWidth,s.object.matrix),O(n*(s.object.top-s.object.bottom)/s.object.zoom/l.clientHeight,s.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),s.enablePan=!1)}}();function L(e){s.object.isPerspectiveCamera?f/=e:s.object.isOrthographicCamera?(s.object.zoom=Math.max(s.minZoom,Math.min(s.maxZoom,s.object.zoom*e)),s.object.updateProjectionMatrix(),_=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),s.enableZoom=!1)}function j(e){s.object.isPerspectiveCamera?f*=e:s.object.isOrthographicCamera?(s.object.zoom=Math.max(s.minZoom,Math.min(s.maxZoom,s.object.zoom/e)),s.object.updateProjectionMatrix(),_=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),s.enableZoom=!1)}function D(e){b.set(e.clientX,e.clientY)}function F(e){if(!1!==s.enabled){switch(e.preventDefault(),s.domElement.focus?s.domElement.focus():window.focus(),e.button){case s.mouseButtons.LEFT:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===s.enablePan)return;D(e),d=u.PAN}else{if(!1===s.enableRotate)return;!function(e){w.set(e.clientX,e.clientY)}(e),d=u.ROTATE}break;case s.mouseButtons.MIDDLE:if(!1===s.enableZoom)return;!function(e){k.set(e.clientX,e.clientY)}(e),d=u.DOLLY;break;case s.mouseButtons.RIGHT:if(!1===s.enablePan)return;D(e),d=u.PAN}d!==u.NONE&&(document.addEventListener("mousemove",R,!1),document.addEventListener("mouseup",H,!1),s.dispatchEvent(m))}}function R(e){if(!1!==s.enabled)switch(e.preventDefault(),d){case u.ROTATE:if(!1===s.enableRotate)return;!function(e){v.set(e.clientX,e.clientY),y.subVectors(v,w).multiplyScalar(s.rotateSpeed);var t=s.domElement===document?s.domElement.body:s.domElement;z(2*Math.PI*y.x/t.clientHeight),S(2*Math.PI*y.y/t.clientHeight),w.copy(v),s.update()}(e);break;case u.DOLLY:if(!1===s.enableZoom)return;!function(e){C.set(e.clientX,e.clientY),M.subVectors(C,k),M.y>0?L(N()):M.y<0&&j(N()),k.copy(C),s.update()}(e);break;case u.PAN:if(!1===s.enablePan)return;!function(e){T.set(e.clientX,e.clientY),A.subVectors(T,b).multiplyScalar(s.panSpeed),I(A.x,A.y),b.copy(T),s.update()}(e)}}function H(e){!1!==s.enabled&&(document.removeEventListener("mousemove",R,!1),document.removeEventListener("mouseup",H,!1),s.dispatchEvent(h),d=u.NONE)}function U(e){!1===s.enabled||!1===s.enableZoom||d!==u.NONE&&d!==u.ROTATE||(e.preventDefault(),e.stopPropagation(),s.dispatchEvent(m),function(e){e.deltaY<0?j(N()):e.deltaY>0&&L(N()),s.update()}(e),s.dispatchEvent(h))}function W(e){!1!==s.enabled&&!1!==s.enableKeys&&!1!==s.enablePan&&function(e){var t=!1;switch(e.keyCode){case s.keys.UP:I(0,s.keyPanSpeed),t=!0;break;case s.keys.BOTTOM:I(0,-s.keyPanSpeed),t=!0;break;case s.keys.LEFT:I(s.keyPanSpeed,0),t=!0;break;case s.keys.RIGHT:I(-s.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),s.update())}(e)}function Y(e){if(!1!==s.enabled){switch(e.preventDefault(),e.touches.length){case 1:if(!1===s.enableRotate)return;!function(e){w.set(e.touches[0].pageX,e.touches[0].pageY)}(e),d=u.TOUCH_ROTATE;break;case 2:if(!1===s.enableZoom&&!1===s.enablePan)return;!function(e){if(s.enableZoom){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,l=Math.sqrt(t*t+n*n);k.set(0,l)}if(s.enablePan){var i=.5*(e.touches[0].pageX+e.touches[1].pageX),a=.5*(e.touches[0].pageY+e.touches[1].pageY);b.set(i,a)}}(e),d=u.TOUCH_DOLLY_PAN;break;default:d=u.NONE}d!==u.NONE&&s.dispatchEvent(m)}}function B(e){if(!1!==s.enabled)switch(e.preventDefault(),e.stopPropagation(),e.touches.length){case 1:if(!1===s.enableRotate)return;if(d!==u.TOUCH_ROTATE)return;!function(e){v.set(e.touches[0].pageX,e.touches[0].pageY),y.subVectors(v,w).multiplyScalar(s.rotateSpeed);var t=s.domElement===document?s.domElement.body:s.domElement;z(2*Math.PI*y.x/t.clientHeight),S(2*Math.PI*y.y/t.clientHeight),w.copy(v),s.update()}(e);break;case 2:if(!1===s.enableZoom&&!1===s.enablePan)return;if(d!==u.TOUCH_DOLLY_PAN)return;!function(e){if(s.enableZoom){var t=e.touches[0].pageX-e.touches[1].pageX,n=e.touches[0].pageY-e.touches[1].pageY,l=Math.sqrt(t*t+n*n);C.set(0,l),M.set(0,Math.pow(C.y/k.y,s.zoomSpeed)),L(M.y),k.copy(C)}if(s.enablePan){var i=.5*(e.touches[0].pageX+e.touches[1].pageX),a=.5*(e.touches[0].pageY+e.touches[1].pageY);T.set(i,a),A.subVectors(T,b).multiplyScalar(s.panSpeed),I(A.x,A.y),b.copy(T)}s.update()}(e);break;default:d=u.NONE}}function V(e){!1!==s.enabled&&(s.dispatchEvent(h),d=u.NONE)}function Z(e){!1!==s.enabled&&e.preventDefault()}s.domElement.addEventListener("contextmenu",Z,!1),s.domElement.addEventListener("mousedown",F,!1),s.domElement.addEventListener("wheel",U,!1),s.domElement.addEventListener("touchstart",Y,!1),s.domElement.addEventListener("touchend",V,!1),s.domElement.addEventListener("touchmove",B,!1),window.addEventListener("keydown",W,!1),this.update()};(i.prototype=Object.create(l.j.prototype)).constructor=i,Object.defineProperties(i.prototype,{center:{get:function(){return console.warn("OrbitControls: .center has been renamed to .target"),this.target}},noZoom:{get:function(){return console.warn("OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(e){console.warn("OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!e}},noRotate:{get:function(){return console.warn("OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),!this.enableRotate},set:function(e){console.warn("OrbitControls: .noRotate has been deprecated. Use .enableRotate instead."),this.enableRotate=!e}},noPan:{get:function(){return console.warn("OrbitControls: .noPan has been deprecated. Use .enablePan instead."),!this.enablePan},set:function(e){console.warn("OrbitControls: .noPan has been deprecated. Use .enablePan instead."),this.enablePan=!e}},noKeys:{get:function(){return console.warn("OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),!this.enableKeys},set:function(e){console.warn("OrbitControls: .noKeys has been deprecated. Use .enableKeys instead."),this.enableKeys=!e}},staticMoving:{get:function(){return console.warn("OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),!this.enableDamping},set:function(e){console.warn("OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead."),this.enableDamping=!e}},dynamicDampingFactor:{get:function(){return console.warn("OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor},set:function(e){console.warn("OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead."),this.dampingFactor=e}}});var a=i,o=n(2),r=n(3);function s(){this.positions=[],this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[],this.counters=[],this.geometry=new l.e,this.widthCallback=null,this.matrixWorld=new l.t}function q(e,t,n,l,i){let a;if(e=e.subarray||e.slice?e:e.buffer,n=n.subarray||n.slice?n:n.buffer,e=t?e.subarray?e.subarray(t,i&&t+i):e.slice(t,i&&t+i):e,n.set)n.set(e,l);else for(a=0;a<e.length;a++)n[a+l]=e[a];return n}function m(e){l.F.call(this,{uniforms:Object.assign({},r.a.fog,{lineWidth:{value:1},map:{value:null},useMap:{value:0},alphaMap:{value:null},useAlphaMap:{value:0},color:{value:new l.f(16777215)},opacity:{value:1},resolution:{value:new l.M(1,1)},sizeAttenuation:{value:1},near:{value:1},far:{value:1},dashArray:{value:0},dashOffset:{value:0},dashRatio:{value:.5},useDash:{value:0},visibility:{value:1},alphaTest:{value:0},repeat:{value:new l.M(1,1)}}),vertexShader:l.E.meshline_vert,fragmentShader:l.E.meshline_frag}),this.type="MeshLineMaterial",Object.defineProperties(this,{lineWidth:{enumerable:!0,get:function(){return this.uniforms.lineWidth.value},set:function(e){this.uniforms.lineWidth.value=e}},map:{enumerable:!0,get:function(){return this.uniforms.map.value},set:function(e){this.uniforms.map.value=e}},useMap:{enumerable:!0,get:function(){return this.uniforms.useMap.value},set:function(e){this.uniforms.useMap.value=e}},alphaMap:{enumerable:!0,get:function(){return this.uniforms.alphaMap.value},set:function(e){this.uniforms.alphaMap.value=e}},useAlphaMap:{enumerable:!0,get:function(){return this.uniforms.useAlphaMap.value},set:function(e){this.uniforms.useAlphaMap.value=e}},color:{enumerable:!0,get:function(){return this.uniforms.color.value},set:function(e){this.uniforms.color.value=e}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(e){this.uniforms.opacity.value=e}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(e){this.uniforms.resolution.value.copy(e)}},sizeAttenuation:{enumerable:!0,get:function(){return this.uniforms.sizeAttenuation.value},set:function(e){this.uniforms.sizeAttenuation.value=e}},near:{enumerable:!0,get:function(){return this.uniforms.near.value},set:function(e){this.uniforms.near.value=e}},far:{enumerable:!0,get:function(){return this.uniforms.far.value},set:function(e){this.uniforms.far.value=e}},dashArray:{enumerable:!0,get:function(){return this.uniforms.dashArray.value},set:function(e){this.uniforms.dashArray.value=e,this.useDash=0!==e?1:0}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(e){this.uniforms.dashOffset.value=e}},dashRatio:{enumerable:!0,get:function(){return this.uniforms.dashRatio.value},set:function(e){this.uniforms.dashRatio.value=e}},useDash:{enumerable:!0,get:function(){return this.uniforms.useDash.value},set:function(e){this.uniforms.useDash.value=e}},visibility:{enumerable:!0,get:function(){return this.uniforms.visibility.value},set:function(e){this.uniforms.visibility.value=e}},alphaTest:{enumerable:!0,get:function(){return this.uniforms.alphaTest.value},set:function(e){this.uniforms.alphaTest.value=e}},repeat:{enumerable:!0,get:function(){return this.uniforms.repeat.value},set:function(e){this.uniforms.repeat.value.copy(e)}}}),this.setValues(e)}function h(){this.version=0}s.prototype.setMatrixWorld=function(e){this.matrixWorld=e},s.prototype.setGeometry=function(e,t){if(this.widthCallback=t,this.positions=[],this.counters=[],e instanceof l.l)for(let t=0;t<e.vertices.length;t++){let n=e.vertices[t],l=t/e.vertices.length;this.positions.push(n.x,n.y,n.z),this.positions.push(n.x,n.y,n.z),this.counters.push(l),this.counters.push(l)}if(l.e,e instanceof Float32Array||e instanceof Array)for(let t=0;t<e.length;t+=3){let n=t/e.length;this.positions.push(e[t],e[t+1],e[t+2]),this.positions.push(e[t],e[t+1],e[t+2]),this.counters.push(n),this.counters.push(n)}this.process()},s.prototype.raycast=function(){let e=new l.t,t=new l.C,n=new l.H;return function(i,a){let o=i.linePrecision,r=o*o,s=this.geometry;if(null===s.boundingSphere&&s.computeBoundingSphere(),n.copy(s.boundingSphere),n.applyMatrix4(this.matrixWorld),!1===i.ray.intersectSphere(n))return;e.getInverse(this.matrixWorld),t.copy(i.ray).applyMatrix4(e);let q=new l.N,m=new l.N,h=new l.N,u=new l.N,d=this instanceof l.r?2:1;if(s instanceof l.e){let e=s.index,n=s.attributes;if(null!==e){let l=e.array,o=n.position.array;for(let e=0,n=l.length-1;e<n;e+=d){let n=l[e],s=l[e+1];if(q.fromArray(o,3*n),m.fromArray(o,3*s),t.distanceSqToSegment(q,m,u,h)>r)continue;u.applyMatrix4(this.matrixWorld);let d=i.ray.origin.distanceTo(u);d<i.near||d>i.far||a.push({distance:d,point:h.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this})}}else{let e=n.position.array;for(let n=0,l=e.length/3-1;n<l;n+=d){if(q.fromArray(e,3*n),m.fromArray(e,3*n+3),t.distanceSqToSegment(q,m,u,h)>r)continue;u.applyMatrix4(this.matrixWorld);let l=i.ray.origin.distanceTo(u);l<i.near||l>i.far||a.push({distance:l,point:h.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}}else if(s instanceof l.l){let e=s.vertices,n=e.length;for(let l=0;l<n-1;l+=d){if(t.distanceSqToSegment(e[l],e[l+1],u,h)>r)continue;u.applyMatrix4(this.matrixWorld);let n=i.ray.origin.distanceTo(u);n<i.near||n>i.far||a.push({distance:n,point:h.clone().applyMatrix4(this.matrixWorld),index:l,face:null,faceIndex:null,object:this})}}}}(),s.prototype.compareV3=function(e,t){let n=6*e,l=6*t;return this.positions[n]===this.positions[l]&&this.positions[n+1]===this.positions[l+1]&&this.positions[n+2]===this.positions[l+2]},s.prototype.copyV3=function(e){let t=6*e;return[this.positions[t],this.positions[t+1],this.positions[t+2]]},s.prototype.process=function(){let e,t,n=this.positions.length/6;this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[];for(let e=0;e<n;e++)this.side.push(1),this.side.push(-1);for(let t=0;t<n;t++)e=this.widthCallback?this.widthCallback(t/(n-1)):1,this.width.push(e),this.width.push(e);for(let e=0;e<n;e++)this.uvs.push(e/(n-1),0),this.uvs.push(e/(n-1),1);t=this.compareV3(0,n-1)?this.copyV3(n-2):this.copyV3(0),this.previous.push(t[0],t[1],t[2]),this.previous.push(t[0],t[1],t[2]);for(let e=0;e<n-1;e++)t=this.copyV3(e),this.previous.push(t[0],t[1],t[2]),this.previous.push(t[0],t[1],t[2]);for(let e=1;e<n;e++)t=this.copyV3(e),this.next.push(t[0],t[1],t[2]),this.next.push(t[0],t[1],t[2]);t=this.compareV3(n-1,0)?this.copyV3(1):this.copyV3(n-1),this.next.push(t[0],t[1],t[2]),this.next.push(t[0],t[1],t[2]);for(let e=0;e<n-1;e++){let t=2*e;this.indices_array.push(t,t+1,t+2),this.indices_array.push(t+2,t+1,t+3)}this.attributes?(this.attributes.position.copyArray(new Float32Array(this.positions)),this.attributes.position.needsUpdate=!0,this.attributes.previous.copyArray(new Float32Array(this.previous)),this.attributes.previous.needsUpdate=!0,this.attributes.next.copyArray(new Float32Array(this.next)),this.attributes.next.needsUpdate=!0,this.attributes.side.copyArray(new Float32Array(this.side)),this.attributes.side.needsUpdate=!0,this.attributes.width.copyArray(new Float32Array(this.width)),this.attributes.width.needsUpdate=!0,this.attributes.uv.copyArray(new Float32Array(this.uvs)),this.attributes.uv.needsUpdate=!0,this.attributes.index.copyArray(new Uint16Array(this.indices_array)),this.attributes.index.needsUpdate=!0):this.attributes={position:new l.d(new Float32Array(this.positions),3),previous:new l.d(new Float32Array(this.previous),3),next:new l.d(new Float32Array(this.next),3),side:new l.d(new Float32Array(this.side),1),width:new l.d(new Float32Array(this.width),1),uv:new l.d(new Float32Array(this.uvs),2),index:new l.d(new Uint16Array(this.indices_array),1),counters:new l.d(new Float32Array(this.counters),1)},this.geometry.addAttribute("position",this.attributes.position),this.geometry.addAttribute("previous",this.attributes.previous),this.geometry.addAttribute("next",this.attributes.next),this.geometry.addAttribute("side",this.attributes.side),this.geometry.addAttribute("width",this.attributes.width),this.geometry.addAttribute("uv",this.attributes.uv),this.geometry.addAttribute("counters",this.attributes.counters),this.geometry.setIndex(this.attributes.index)},s.prototype.advance=function(e){let t=this.attributes.position.array,n=this.attributes.previous.array,l=this.attributes.next.array,i=t.length;q(t,0,n,0,i),q(t,6,t,0,i-6),t[i-6]=e.x,t[i-5]=e.y,t[i-4]=e.z,t[i-3]=e.x,t[i-2]=e.y,t[i-1]=e.z,q(t,6,l,0,i-6),l[i-6]=e.x,l[i-5]=e.y,l[i-4]=e.z,l[i-3]=e.x,l[i-2]=e.y,l[i-1]=e.z,this.attributes.position.needsUpdate=!0,this.attributes.previous.needsUpdate=!0,this.attributes.next.needsUpdate=!0},l.E.meshline_vert=["",l.E.clipping_planes_pars_vertex,l.E.logdepthbuf_pars_vertex,l.E.fog_pars_vertex,"","attribute vec3 previous;","attribute vec3 next;","attribute float side;","attribute float width;","attribute float counters;","","uniform vec2 resolution;","uniform float lineWidth;","uniform vec3 color;","uniform float opacity;","uniform float near;","uniform float far;","uniform float sizeAttenuation;","","varying vec2 vUV;","varying vec4 vColor;","varying float vCounters;","","vec2 fix( vec4 i, float aspect ) {","","    vec2 res = i.xy / i.w;","    res.x *= aspect;","\t vCounters = counters;","    return res;","","}","","void main() {","","    float aspect = resolution.x / resolution.y;","    float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);","","    vColor = vec4( color, opacity );","    vUV = uv;","","    mat4 m = projectionMatrix * modelViewMatrix;","    vec4 finalPosition = m * vec4( position, 1.0 );","    vec4 prevPos = m * vec4( previous, 1.0 );","    vec4 nextPos = m * vec4( next, 1.0 );","","    vec2 currentP = fix( finalPosition, aspect );","    vec2 prevP = fix( prevPos, aspect );","    vec2 nextP = fix( nextPos, aspect );","","    float pixelWidth = finalPosition.w * pixelWidthRatio;","    float w = 1.8 * pixelWidth * lineWidth * width;","","    if( sizeAttenuation == 1. ) {","        w = 1.8 * lineWidth * width;","    }","","    vec2 dir;","    if( nextP == currentP ) dir = normalize( currentP - prevP );","    else if( prevP == currentP ) dir = normalize( nextP - currentP );","    else {","        vec2 dir1 = normalize( currentP - prevP );","        vec2 dir2 = normalize( nextP - currentP );","        dir = normalize( dir1 + dir2 );","","        vec2 perp = vec2( -dir1.y, dir1.x );","        vec2 miter = vec2( -dir.y, dir.x );","        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );","","    }","","    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;","    vec2 normal = vec2( -dir.y, dir.x );","    normal.x /= aspect;","    normal *= .5 * w;","","    vec4 offset = vec4( normal * side, 0.0, 1.0 );","    finalPosition.xy += offset.xy;","","    gl_Position = finalPosition;","",l.E.logdepthbuf_vertex,l.E.fog_vertex&&"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",l.E.fog_vertex,l.E.clipping_planes_vertex,"}"].join("\r\n"),l.E.meshline_frag=["",l.E.fog_pars_fragment,l.E.logdepthbuf_pars_fragment,l.E.clipping_planes_pars_fragment,"","uniform sampler2D map;","uniform sampler2D alphaMap;","uniform float useMap;","uniform float useAlphaMap;","uniform float useDash;","uniform float dashArray;","uniform float dashOffset;","uniform float dashRatio;","uniform float visibility;","uniform float alphaTest;","uniform vec2 repeat;","","varying vec2 vUV;","varying vec4 vColor;","varying float vCounters;","","void main() {","",l.E.clipping_planes_fragment,l.E.logdepthbuf_fragment,"","    vec4 c = vColor;","    if( useMap == 1. ) c *= texture2D( map, vUV * repeat );","    if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV * repeat ).a;","    if( c.a < alphaTest ) discard;","    if( useDash == 1. ){","        c.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));","    }","    gl_FragColor = c;","    gl_FragColor.a *= step(vCounters, visibility);","",l.E.fog_fragment,"}"].join("\r\n"),m.prototype=Object.create(l.F.prototype),m.prototype.constructor=m,m.prototype.isMeshLineMaterial=!0,m.prototype.copy=function(e){return l.F.prototype.copy.call(this,e),this.lineWidth=e.lineWidth,this.map=e.map,this.useMap=e.useMap,this.alphaMap=e.alphaMap,this.useAlphaMap=e.useAlphaMap,this.color.copy(e.color),this.opacity=e.opacity,this.resolution.copy(e.resolution),this.sizeAttenuation=e.sizeAttenuation,this.near=e.near,this.far=e.far,this.dashArray.copy(e.dashArray),this.dashOffset.copy(e.dashOffset),this.dashRatio.copy(e.dashRatio),this.useDash=e.useDash,this.visibility=e.visibility,this.alphaTest=e.alphaTest,this.repeat.copy(e.repeat),this},h.prototype.makeText=function(e,t,n,i,a){let o,r,s=new l.f(i),q=new l.v({color:s,transparent:!0,opacity:.4,side:l.h}),m=t.generateShapes(e,100),h=new l.G(m);return h.computeBoundingBox(),o=-.5*(h.boundingBox.max.x-h.boundingBox.min.x),h.translate(o,0,0),(r=new l.u(h,q)).position.copy(n),r.scale.copy(new l.N(.02,.02,.02)),r.dontReset=!0,a&&r.rotation.copy(a),r},h.prototype.makeArrowHelper=function(e,t){let n=new l.f("#000000");return new l.b(e,t,30,n,1,1)},h.prototype.make1dCurve=function(e,t,n){let i=new l.q({color:new l.f("#4c72e2"),linewidth:1,linecap:"round",linejoin:"round",clippingPlanes:[new l.z(new l.N(-1,0,0),15)]}),a=new l.l,o=n.x[0],r=n.z[0],s=n.x[1]-o,q=n.z[1]-r;for(let n=0;n<t;++n){let i=o+s*(n/t),r=q*e(i)/2;a.vertices.push(new l.N(i,r,0))}return new l.p(a,i)},h.prototype.makeSprite1d=function(e,t,n){let i=document.createElement("canvas");i.width=256,i.height=256;let a=i.getContext("2d");a.beginPath(),a.fillStyle=t,a.arc(128,128,128,0,2*Math.PI,!0),a.fill(),a.stroke();let o=new l.L(i);o.needsUpdate=!0;let r=new l.K({map:o,color:16777215}),s=new l.J(r);return n?(s.position.x=e[0],s.position.z=e[1],s.position.y=e[2],s.scale.set(.5,.5,.5)):(s.position.x=e[0],s.position.y=e[1],s.position.z=-.05,s.scale.set(1,1,1)),s},h.prototype.findGlobalMin1d=function(e,t,n){let l=n.x[0],i=n.z[0],a=n.x[1]-l,o=n.z[1]-i,r=[0,Number.POSITIVE_INFINITY];for(let n=0;n<t;++n){let i=l+a*(n/t),s=o*e(i)/2;s<r[1]&&(r=[i,s])}return r},h.prototype.findLocalMinima=function(e,t,n){let l=n.x[0],i=n.z[0],a=n.x[1]-l,o=n.z[1]-i,r=[];for(let n=0;n<t;++n){let i=l+a*(n/t),s=l+a*((n-1)/t),q=l+a*((n+1)/t),m=o*e(i)/2,h=n<1?m+1:o*e(s)/2,u=n>t-2?m+1:o*e(q)/2;m<h&&m<u&&r.push([i,m])}return r},h.prototype.findLocalMaxima=function(e,t,n){let l=n.x[0],i=n.z[0],a=n.x[1]-l,o=n.z[1]-i,r=[];for(let n=0;n<t;++n){let i=l+a*(n/t),s=l+a*((n-1)/t),q=l+a*((n+1)/t),m=o*e(i)/2,h=n<1?m-1:o*e(s)/2,u=n>t-2?m-1:o*e(q)/2;m>h&&m>u&&r.push([i,m])}return r},h.prototype.makeLarge1dCurve=function(e,t,n,i,a){i||(i=0);let o=[new l.f("#ff6452"),new l.f("#ffa765"),new l.f("#68cfff"),new l.f("#b75bff"),new l.f("#539d60"),new l.f("#fff34c")],r=[new l.z(new l.N(0,-1,0),30)];a&&a.length>0&&r.push(...a);let q=new m({color:o[i],lineWidth:.5,clipping:!0,clippingPlanes:r}),h=new l.l,u=n.x[0],d=n.z[0],p=n.x[1]-u,x=n.z[1]-d;for(let n=0;n<t;++n){let i=u+p*(n/t),a=x*e(i)/2;h.vertices.push(new l.N(i,a,-.05))}let c=new s;return c.setGeometry(h),new l.u(c.geometry,q)},h.prototype.makeLargeSegment=function(e,t){let n=new m({color:new l.f("#ff6452"),lineWidth:.2}),i=new l.l;i.vertices.push(new l.N(e[0],e[2],e[1])),i.vertices.push(new l.N(t[0],t[2],t[1]));let a=new s;return a.setGeometry(i),new l.u(a.geometry,n)},h.prototype.make2dCurveWireframeColor=function(e,t,n,i,a){let o=150/t,r=150/t,s=new l.A(o,r,10,10),q=n.x[0],m=n.y[0],h=n.z[0],u=n.x[1]-q,d=n.y[1]-m,p=n.z[1]-h,x=s.getAttribute("position"),c=[],f=p*e(q+u*(i/t),m+d*(a/t),0)/2;for(let n=0;n<=t;++n){let l=m+d*(n/t);if(!(Math.abs(n-a)>5))for(let o=0;o<=t;++o){let r=q+u*(o/t);if(Math.abs(o-i)>5)continue;let s=p*e(r,l,0)/2,m=o-i+5+11*(n-a+5);x.setX(m,r),x.setY(m,l),x.setZ(m,s),s<f?(0,c.push(0,.5,.9)):s>f?(c.push(.9,.5,0),0):c.push(.9,.5,.9)}}let g=new Float32Array(c);s.addAttribute("color",new l.d(g,3)),s.computeVertexNormals();let _=new l.w({vertexColors:l.O,side:l.h,wireframe:!0}),w=new l.u(s,_);return w.rotation.x=-Math.PI/2,w.position.z=0,w},h.prototype.make2dCurve=function(e,t,n){let i=new l.A(15,15,t,t),a=n.x[0],o=n.y[0],r=n.z[0],s=n.x[1]-a,q=n.y[1]-o,m=n.z[1]-r,h=i.getAttribute("position");for(let n=0;n<=t;++n){let l=a+s*(n/t);for(let i=0;i<=t;++i){let a=o+q*(i/t),r=m*e(l,a,0)/2,s=n+(t+1)*i;h.setX(s,l),h.setY(s,a),h.setZ(s,r)}}i.computeVertexNormals();let u=new l.w({color:new l.f("#3b49a6"),side:l.h,shininess:100}),d=new l.u(i,u);return d.rotation.x=-Math.PI/2,d.position.z=0,d},h.prototype.generatorCurve1d=function(e){let t=1*e-7;return Math.sin(t)*Math.cos(.2*t)+Math.cos(.3*t)},h.prototype.evaluateFromExpressionAndExtent2d=function(e,t,n,l){let i=t.x[0],a=t.x[1]-i,o=t.y[0],r=t.y[1]-o,s=t.z[0],q=t.z[1]-s;return function(t,s){return q*e(i+a*(t/n),o+r*(s/l),0)/2}},h.prototype.evaluatePointFromExpressionAndExtent2d=function(e,t,n,l){let i=t.x[0],a=t.x[1]-i,o=t.y[0],r=t.y[1]-o,s=t.z[0],q=t.z[1]-s;return function(t,s){let m=i+a*(t/n),h=o+r*(s/l);return[m,-h,q*e(m,h,0)/2]}},h.prototype.generatorCurve2d=function(e,t,n){let l=this.generatorCurve1d(e),i=Math.pow(e-0,2),a=Math.pow(t-15,2);return 1.5*Math.exp(-(i+a)/25)+l*(Math.exp(-t/20)*Math.cos(.5*t*1)*Math.cos(.2*t+n))},h.prototype.updateCurve2dt=function(e,t,n,l,i){let a=t/n,o=e.geometry,r=o.getAttribute("position"),s={x:[-15,15],y:[0,30],z:[-7.5,7.5]},q=s.x[0],m=s.y[0],h=s.z[0],u=s.x[1]-q,d=s.y[1]-m,p=s.z[1]-h;for(let e=0;e<=i;++e){let t=q+u*(e/i);for(let n=0;n<=i;++n){let o=m+d*(n/i),s=p*l(t,o,2*Math.PI*a)/2,q=e+(i+1)*n;r.setX(q,t),r.setY(q,o),r.setZ(q,s)}}r.needsUpdate=!0,o.computeVertexNormals()},h.prototype.makeAxisHelperXY=function(){let e=new l.m(30,10);return e.position.y=0,e.rotation.x=Math.PI/2,e},h.prototype.makeAxisHelperXZ=function(){let e=new l.m(30,10);return e.position.y=-15,e.position.z=-15,e},h.prototype.makeAxisHelperX=function(){let e=new l.N(1,0,0);e.normalize();let t=new l.N(-15,-16,0);return this.makeArrowHelper(e,t)},h.prototype.makeAxisHelperY=function(){let e=new l.N(0,1,0);e.normalize();let t=new l.N(-16,-15,0);return this.makeArrowHelper(e,t)},h.prototype.makeAxisHelperZ=function(){let e=new l.N(0,0,-1);e.normalize();let t=new l.N(-16,-16,0);return this.makeArrowHelper(e,t)},h.prototype.makeGroup=function(){return new l.n},h.prototype.getNumberOfTicks=function(e,t,n){return e>t?e-t:e+n-t},h.prototype.updatePlane=function(e,t,n,l){let i=e.material.clippingPlanes;if(!i||!i[0])return!0;let a=i[0],o=t[n][0],r=t[n][1];a.constant=o+l*(r-o),a.needsUpdate=!0},h.prototype.swipeIn=function(e,t,n,l,i,a,o){let r=this.getNumberOfTicks(n,l,i),s=r/a;if(t.isGroup){let n=t.children;for(let t=0;t<n.length;++t)this.updatePlane(n[t],o,e,s)}else this.updatePlane(t,o,e,s);return r===a},h.prototype.swipeOut=function(e,t,n,l,i,a,o){let r=this.getNumberOfTicks(n,l,i),s=1-r/a;if(t.isGroup){let n=t.children;for(let t=0;t<n.length;++t)this.updatePlane(n[t],o,e,s)}else this.updatePlane(t,o,e,s);return r===a},h.prototype.stretchIn=function(e,t,n,l,i,a){let o=this.getNumberOfTicks(n,l,i),r=o/a;return t.scale[e]=Math.max(r,.001),o===a},h.prototype.stretchOut=function(e,t,n,l,i,a){let o=this.getNumberOfTicks(n,l,i),r=o/a;return t.scale[e]=Math.max(1-r,.001),o===a},h.prototype.setOpacity=function(e,t){let n=null;if(e.material)n=e.material;else if(e.materials&&e.materials[0])n=e.materials[0];else if(e.children){let n=e.children;for(let e=0;e<n.length;++e){let l=n[e].material;l&&l.opacity&&(l.transparent=!0,l.opacity=t,l.needsUpdate=!0)}}n&&(n.transparent=!0,n.opacity=t,n.needsUpdate=!0)},h.prototype.fadeIn=function(e,t,n,l,i,a){let o=this.getNumberOfTicks(t,n,l),r=o/i;return void 0!==a&&(r*=a),this.setOpacity(e,r),o===i},h.prototype.fadeOut=function(e,t,n,l,i,a){let o=this.getNumberOfTicks(t,n,l),r=o/i;return void 0!==a&&(r*=a),this.setOpacity(e,1-r),o===i},h.prototype.linear=function(e){return e},h.prototype.smoothstep=function(e){return e<0?0:e>1?1:3*Math.pow(e,2)-2*Math.pow(e,3)},h.prototype.perlinstep=function(e){return e<0?0:e>1?1:6*Math.pow(e,5)-15*Math.pow(e,4)+10*Math.pow(e,3)},h.prototype.interpolateCamera=function(e,t,n,i,a,o,r,s){let q=this.getNumberOfTicks(n,i,a),m=r(q/o),h=s?t.position2:t.position1,u=s?t.position1:t.position2,d=e.position,p=h.x+m*(u.x-h.x),x=h.y+m*(u.y-h.y),c=h.z+m*(u.z-h.z);d.x=p,d.y=x,d.z=c;let f=s?t.quaternion2:t.quaternion1,g=s?t.quaternion1:t.quaternion2,_=e.quaternion,w=new l.B;return l.B.slerp(f,g,w,m),_.copy(w),q===o};var u=h;function d(e,t,n,l){this.scene=e,this.camera=t,this.controls=n,this.slides=[[[]]],this.currentSlide=0,this.transiting=!1,this.activeMeshes=[],this.needAnimation=[],this.needIn=[],this.needOut=[],this.needCam=[],this.time=0,this.maxTime=100,this.startTime=0,this.defaultMaxTimeTransition=10,this.maxTimeTransition=10,this.maxTimeCameraTransition=10,this.endOutAnimationCallback=null,this.endInAnimationCallback=null,this.backwards=!1,this.lastBackwards=!1,this.explainerElement=l,this.debug=!0}d.prototype.computeNbSlides=function(){return this.slides.length},d.prototype.getSlideAt=function(e){return this.slides[e]},d.prototype.clearSlides=function(){this.slides=[[[]]],this.currentSlide=-1,this.transiting=!1,this.activeMeshes=[],this.needAnimation=[],this.needIn=[],this.needOut=[],this.needCam=[],this.time=0,this.maxTime=100,this.startTime=0,this.defaultMaxTimeTransition=10,this.maxTimeTransition=10,this.maxTimeCameraTransition=10},d.prototype.addSlide=function(e){this.slides.push(e);let t=this.computeNbSlides();this.needAnimation=[],this.needIn=[],this.needOut=[],this.needCam=[];for(let e=0;e<t;++e)this.needAnimation.push(!1),this.needIn.push(!1),this.needOut.push(!1),this.needCam.push(!1)},d.prototype.addSlides=function(e,t){if(e.length<1)throw Error("[Slider] addSlides must take an array of [slide object] as an input.");t&&(this.explainerElement=t);for(let t=0;t<e.length;++t)this.addSlide(e[t])},d.prototype.onKeyDown=function(e){if(!this.transiting)switch(this.lastBackwards=this.backwards,e.preventDefault&&e.preventDefault(),e.keyCode){case 33:case 37:case 81:case 65:this.transiting=!0,this.previous();break;case 34:case 39:case 68:this.transiting=!0,this.next()}},d.prototype.next=function(){let e=this.computeNbSlides(),t=this.currentSlide;t<e?(this.currentSlide+=1,this.transitionStart(t,this.currentSlide)):this.transiting=!1},d.prototype.previous=function(){let e=this.currentSlide;e>=0?(this.currentSlide-=1,this.transitionStart(e,this.currentSlide,!0)):this.transiting=!1},d.prototype.removeMesh=function(e){if(!e)return;if(!e instanceof l.x)return;this.activeMeshes.indexOf(e.uuid)<0&&this.debug&&console.log("[Slider] trying to remove a mesh that is not present (not aborted)."),this.scene.remove(e);let t=this.activeMeshes;for(let n=0;n<t.length;++n)if(t[n]===e.uuid){this.activeMeshes.splice(n,1);break}},d.prototype.addMesh=function(e,t){if(e&&e instanceof l.x){if(this.activeMeshes.indexOf(e.uuid)>-1)throw Error("[Slider] trying to add a mesh that is already present (aborted).");this.debug&&console.log(e),this.resetMesh(e,t),this.scene.add(e),this.activeMeshes.push(e.uuid)}},d.prototype.resetScale=function(e){e.scale&&(e.scale.x=1,e.scale.y=1,e.scale.z=1)},d.prototype.resetOpacity=function(e,t){let n=null,l=t||1;if(e.material)n=e.material;else if(e.materials&&e.materials[0])n=e.materials[0];else if(e.children){let t=e.children;for(let e=0;e<t.length;++e){let n=t[e].material;n&&n.opacity&&(n.transparent=!0,n.opacity=l,n.needsUpdate=!0)}}n&&(n.transparent=!0,n.opacity=l,n.needsUpdate=!0)},d.prototype.resetMesh=function(e,t){e&&!e.dontReset&&(this.resetScale(e),e instanceof l.n||this.resetOpacity(e,t))},d.prototype.addMeshArray=function(e,t){for(let n=0;n<e.length;++n)t&&e[n]===t||this.addMesh(e[n])},d.prototype.removeMeshArray=function(e){for(let t=0;t<e.length;++t)this.removeMesh(e[t])},d.prototype.endOldSlideTransition=function(e,t,n,i){if(n){let e=this.getSlideAt(i);if(!e)return;let t=e.removeAfter;t&&t.length>0?this.addMeshArray(t,e.mesh):t instanceof l.x&&t!==e.mesh&&this.addMesh(t)}else{let t=e.removeAfter;t&&t.length>0?this.removeMeshArray(t):t instanceof l.x&&this.removeMesh(t)}n&&this.removeMesh(e.mesh),this.needOut[t]&&(this.needOut[t]=!1)},d.prototype.startNewSlideTransistion=function(e,t,n){if(!n){let e=t.addBefore;e&&e.length?this.addMeshArray(e):e instanceof l.x&&this.addMesh(e),this.addMesh(t.mesh,t.opacityMax)}},d.prototype.endNewSlideTransition=function(e,t,n){if(n){let t=e.addBefore;t&&t.length>0?this.removeMeshArray(t):t instanceof l.x&&this.removeMesh(t)}e.animate&&(this.time=0,this.needAnimation[t]=!0),this.needIn[t]&&(this.needIn[t]=!1),this.needCam[t]&&(this.needCam[t]=!1),this.explainerElement&&(this.explainerElement.innerHTML=e.explainText?e.explainText:"")},d.prototype.updateDuration=function(e){e.duration&&e.duration>0&&e.duration<this.maxTime?this.maxTimeTransition=e.duration:this.maxTimeTransition=this.defaultMaxTimeTransition},d.prototype.transitionOut=function(e,t,n){let l,i=!1;return e>=0&&void 0!==(l=this.getSlideAt(e))&&(this.startTime=this.time,this.updateDuration(l),l.animate&&(this.needAnimation[e]=!1),l.animateOut&&!n?(this.endOutAnimationCallback=function(){this.debug&&console.log("ending out animation on "+e+", "+l),this.endOldSlideTransition(l,e,n,t),this.transitionIn(t,n)}.bind(this),this.needOut[e]=!0,i=!0):(this.endOldSlideTransition(l,e,n,t),i=!1)),i},d.prototype.getStartingCamera=function(e){let t=this.getSlideAt(e);if(!(t&&t.mesh instanceof l.x))return-1;for(let t=e-1;t>=0;--t){let e=this.getSlideAt(t);if(e&&e.camera)return t}return-1},d.prototype.transitionIn=function(e,t){let n,l=!1;if(e>=0&&e<this.computeNbSlides()&&void 0!==(n=this.getSlideAt(e))){this.startTime=this.time;let i=this.getStartingCamera(e);if(!n.camera&&i>-1&&!this.cameraIsOnTarget(this.getSlideAt(i))){console.log("need to animate camera");let a=this.getSlideAt(i);return this.updateDuration(a),a.target.position1.copy(a.camera.position),a.target.quaternion1.copy(a.camera.quaternion),a.duration&&a.duration>0&&(this.maxTimeCameraTransition=a.duration),this.endInAnimationCallback=function(){this.debug&&console.log("ending camera animation on "+e+", "+n),this.needCam[i]=!1,this.transitionIn(e,t)}.bind(this),this.needCam[i]=!0,l=!0,this.update(),l}this.startNewSlideTransistion(e,n,t),this.updateDuration(n),n.animateIn&&!t?(this.endInAnimationCallback=function(){this.debug&&console.log("ending in animation on "+e+", "+n),this.endNewSlideTransition(n,e,t)}.bind(this),this.needIn[e]=!0,l=!0,this.update()):n.camera&&!this.cameraIsOnTarget(n)?(n.target.position1.copy(n.camera.position),n.target.quaternion1.copy(n.camera.quaternion),n.duration&&n.duration>0&&(this.maxTimeCameraTransition=n.duration),this.endInAnimationCallback=function(){this.debug&&console.log("ending camera animation on "+e+", "+n),this.endNewSlideTransition(n,e,t)}.bind(this),this.needCam[e]=!0,l=!0,this.update()):(this.endNewSlideTransition(n,e,t),l=!1)}return l},d.prototype.cameraIsOnTarget=function(e){let t=e.camera.position,n=e.target.position2;if(t.x!==n.x||t.y!==n.y||t.z!==n.z)return!1;let l=e.camera.quaternion,i=e.target.quaternion2;return l.x===i.x&&l.y===i.y&&l.z===i.z&&l.w===i.w},d.prototype.transitionStart=function(e,t,n){console.log(e+" -> "+t),this.backwards=n,this.transitionOut(e,t,n)||this.transitionIn(t,n)},d.prototype.update=function(){let e=this.slides;this.time+=1,this.time%=this.maxTime;let t=this.backwards,n=0,l=this.needOut,i=this.needIn,a=this.needCam;for(let i=0;i<l.length;++i)if(l[i]&&!t){e[i].animateOut(this.time,this.startTime,this.maxTime,this.maxTimeTransition,e[i].mesh,e[i].opacityMax)&&(this.debug&&console.log("end animate out"),this.endOutAnimationCallback()),n++;break}if(n>0)return;for(let l=0;l<i.length;++l)if(i[l]&&!t){e[l].animateIn(this.time,this.startTime,this.maxTime,this.maxTimeTransition,e[l].mesh,e[l].opacityMax)&&(this.debug&&console.log("end animate in"),this.endInAnimationCallback()),n++;break}if(n>0)return;for(let t=0;t<a.length;++t)if(a[t]){e[t].transition(this.time,this.startTime,this.maxTime,this.maxTimeTransition,e[t].camera,e[t].target,!1)&&(e[t].target.controlTarget&&(console.log(e[t].target.controlTarget),this.controls.target.copy(e[t].target.controlTarget)),this.debug&&console.log("end camera movement"),this.endInAnimationCallback()),n++;break}if(n>0)return;this.transiting=!1;let o=this.needAnimation;for(let t=0;t<o.length;++t)o[t]&&e[t].animate(this.time,this.maxTime,e[t].mesh)};var p=d;var x={glyphs:{"ο":{x_min:0,x_max:712,ha:815,o:"m 356 -25 q 96 88 192 -25 q 0 368 0 201 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 "},S:{x_min:0,x_max:788,ha:890,o:"m 788 291 q 662 54 788 144 q 397 -26 550 -26 q 116 68 226 -26 q 0 337 0 168 l 131 337 q 200 152 131 220 q 384 85 269 85 q 557 129 479 85 q 650 270 650 183 q 490 429 650 379 q 194 513 341 470 q 33 739 33 584 q 142 964 33 881 q 388 1041 242 1041 q 644 957 543 1041 q 756 716 756 867 l 625 716 q 561 874 625 816 q 395 933 497 933 q 243 891 309 933 q 164 759 164 841 q 325 609 164 656 q 625 526 475 568 q 788 291 788 454 "},"¦":{x_min:343,x_max:449,ha:792,o:"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 "},"/":{x_min:183.25,x_max:608.328125,ha:792,o:"m 608 1041 l 266 -129 l 183 -129 l 520 1041 l 608 1041 "},"Τ":{x_min:-.4375,x_max:777.453125,ha:839,o:"m 777 893 l 458 893 l 458 0 l 319 0 l 319 892 l 0 892 l 0 1013 l 777 1013 l 777 893 "},y:{x_min:0,x_max:684.78125,ha:771,o:"m 684 738 l 388 -83 q 311 -216 356 -167 q 173 -279 252 -279 q 97 -266 133 -279 l 97 -149 q 132 -155 109 -151 q 168 -160 155 -160 q 240 -114 213 -160 q 274 -26 248 -98 l 0 738 l 137 737 l 341 139 l 548 737 l 684 738 "},"Π":{x_min:0,x_max:803,ha:917,o:"m 803 0 l 667 0 l 667 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 803 1012 l 803 0 "},"ΐ":{x_min:-111,x_max:339,ha:361,o:"m 339 800 l 229 800 l 229 925 l 339 925 l 339 800 m -1 800 l -111 800 l -111 925 l -1 925 l -1 800 m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 m 302 1040 l 113 819 l 30 819 l 165 1040 l 302 1040 "},g:{x_min:0,x_max:686,ha:838,o:"m 686 34 q 586 -213 686 -121 q 331 -306 487 -306 q 131 -252 216 -306 q 31 -84 31 -190 l 155 -84 q 228 -174 166 -138 q 345 -207 284 -207 q 514 -109 454 -207 q 564 89 564 -27 q 461 6 521 36 q 335 -23 401 -23 q 88 100 184 -23 q 0 370 0 215 q 87 634 0 522 q 330 758 183 758 q 457 728 398 758 q 564 644 515 699 l 564 737 l 686 737 l 686 34 m 582 367 q 529 560 582 481 q 358 652 468 652 q 189 561 250 652 q 135 369 135 482 q 189 176 135 255 q 361 85 251 85 q 529 176 468 85 q 582 367 582 255 "},"²":{x_min:0,x_max:442,ha:539,o:"m 442 383 l 0 383 q 91 566 0 492 q 260 668 176 617 q 354 798 354 727 q 315 875 354 845 q 227 905 277 905 q 136 869 173 905 q 99 761 99 833 l 14 761 q 82 922 14 864 q 232 974 141 974 q 379 926 316 974 q 442 797 442 878 q 351 635 442 704 q 183 539 321 611 q 92 455 92 491 l 442 455 l 442 383 "},"–":{x_min:0,x_max:705.5625,ha:803,o:"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 "},"Κ":{x_min:0,x_max:819.5625,ha:893,o:"m 819 0 l 650 0 l 294 509 l 139 356 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 "},"ƒ":{x_min:-46.265625,x_max:392,ha:513,o:"m 392 651 l 259 651 l 79 -279 l -46 -278 l 134 651 l 14 651 l 14 751 l 135 751 q 151 948 135 900 q 304 1041 185 1041 q 334 1040 319 1041 q 392 1034 348 1039 l 392 922 q 337 931 360 931 q 271 883 287 931 q 260 793 260 853 l 260 751 l 392 751 l 392 651 "},e:{x_min:0,x_max:714,ha:813,o:"m 714 326 l 140 326 q 200 157 140 227 q 359 87 260 87 q 488 130 431 87 q 561 245 545 174 l 697 245 q 577 48 670 123 q 358 -26 484 -26 q 97 85 195 -26 q 0 363 0 197 q 94 642 0 529 q 358 765 195 765 q 626 627 529 765 q 714 326 714 503 m 576 429 q 507 583 564 522 q 355 650 445 650 q 206 583 266 650 q 140 429 152 522 l 576 429 "},"ό":{x_min:0,x_max:712,ha:815,o:"m 356 -25 q 94 91 194 -25 q 0 368 0 202 q 92 642 0 533 q 356 761 192 761 q 617 644 517 761 q 712 368 712 533 q 619 91 712 201 q 356 -25 520 -25 m 356 85 q 527 175 465 85 q 583 369 583 255 q 528 562 583 484 q 356 651 466 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 356 85 250 85 m 576 1040 l 387 819 l 303 819 l 438 1040 l 576 1040 "},J:{x_min:0,x_max:588,ha:699,o:"m 588 279 q 287 -26 588 -26 q 58 73 126 -26 q 0 327 0 158 l 133 327 q 160 172 133 227 q 288 96 198 96 q 426 171 391 96 q 449 336 449 219 l 449 1013 l 588 1013 l 588 279 "},"»":{x_min:-1,x_max:503,ha:601,o:"m 503 302 l 280 136 l 281 256 l 429 373 l 281 486 l 280 608 l 503 440 l 503 302 m 221 302 l 0 136 l 0 255 l 145 372 l 0 486 l -1 608 l 221 440 l 221 302 "},"©":{x_min:-3,x_max:1008,ha:1106,o:"m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 741 394 q 661 246 731 302 q 496 190 591 190 q 294 285 369 190 q 228 497 228 370 q 295 714 228 625 q 499 813 370 813 q 656 762 588 813 q 733 625 724 711 l 634 625 q 589 704 629 673 q 498 735 550 735 q 377 666 421 735 q 334 504 334 597 q 374 340 334 408 q 490 272 415 272 q 589 304 549 272 q 638 394 628 337 l 741 394 "},"ώ":{x_min:0,x_max:922,ha:1030,o:"m 687 1040 l 498 819 l 415 819 l 549 1040 l 687 1040 m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 338 0 202 q 45 551 0 444 q 161 737 84 643 l 302 737 q 175 552 219 647 q 124 336 124 446 q 155 179 124 248 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 341 797 257 q 745 555 797 450 q 619 737 705 637 l 760 737 q 874 551 835 640 q 922 339 922 444 "},"^":{x_min:193.0625,x_max:598.609375,ha:792,o:"m 598 772 l 515 772 l 395 931 l 277 772 l 193 772 l 326 1013 l 462 1013 l 598 772 "},"«":{x_min:0,x_max:507.203125,ha:604,o:"m 506 136 l 284 302 l 284 440 l 506 608 l 507 485 l 360 371 l 506 255 l 506 136 m 222 136 l 0 302 l 0 440 l 222 608 l 221 486 l 73 373 l 222 256 l 222 136 "},D:{x_min:0,x_max:828,ha:935,o:"m 389 1013 q 714 867 593 1013 q 828 521 828 729 q 712 161 828 309 q 382 0 587 0 l 0 0 l 0 1013 l 389 1013 m 376 124 q 607 247 523 124 q 681 510 681 355 q 607 771 681 662 q 376 896 522 896 l 139 896 l 139 124 l 376 124 "},"∙":{x_min:0,x_max:142,ha:239,o:"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 "},"ÿ":{x_min:0,x_max:47,ha:125,o:"m 47 3 q 37 -7 47 -7 q 28 0 30 -7 q 39 -4 32 -4 q 45 3 45 -1 l 37 0 q 28 9 28 0 q 39 19 28 19 l 47 16 l 47 19 l 47 3 m 37 1 q 44 8 44 1 q 37 16 44 16 q 30 8 30 16 q 37 1 30 1 m 26 1 l 23 22 l 14 0 l 3 22 l 3 3 l 0 25 l 13 1 l 22 25 l 26 1 "},w:{x_min:0,x_max:1009.71875,ha:1100,o:"m 1009 738 l 783 0 l 658 0 l 501 567 l 345 0 l 222 0 l 0 738 l 130 738 l 284 174 l 432 737 l 576 738 l 721 173 l 881 737 l 1009 738 "},$:{x_min:0,x_max:700,ha:793,o:"m 664 717 l 542 717 q 490 825 531 785 q 381 872 450 865 l 381 551 q 620 446 540 522 q 700 241 700 370 q 618 45 700 116 q 381 -25 536 -25 l 381 -152 l 307 -152 l 307 -25 q 81 62 162 -25 q 0 297 0 149 l 124 297 q 169 146 124 204 q 307 81 215 89 l 307 441 q 80 536 148 469 q 13 725 13 603 q 96 910 13 839 q 307 982 180 982 l 307 1077 l 381 1077 l 381 982 q 574 917 494 982 q 664 717 664 845 m 307 565 l 307 872 q 187 831 233 872 q 142 724 142 791 q 180 618 142 656 q 307 565 218 580 m 381 76 q 562 237 562 96 q 517 361 562 313 q 381 423 472 409 l 381 76 "},"\\":{x_min:-.015625,x_max:425.0625,ha:522,o:"m 425 -129 l 337 -129 l 0 1041 l 83 1041 l 425 -129 "},"µ":{x_min:0,x_max:697.21875,ha:747,o:"m 697 -4 q 629 -14 658 -14 q 498 97 513 -14 q 422 9 470 41 q 313 -23 374 -23 q 207 4 258 -23 q 119 81 156 32 l 119 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 173 124 246 q 308 83 216 83 q 452 178 402 83 q 493 359 493 255 l 493 738 l 617 738 l 617 214 q 623 136 617 160 q 673 92 637 92 q 697 96 684 92 l 697 -4 "},"Ι":{x_min:42,x_max:181,ha:297,o:"m 181 0 l 42 0 l 42 1013 l 181 1013 l 181 0 "},"Ύ":{x_min:0,x_max:1144.5,ha:1214,o:"m 1144 1012 l 807 416 l 807 0 l 667 0 l 667 416 l 325 1012 l 465 1012 l 736 533 l 1004 1012 l 1144 1012 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"’":{x_min:0,x_max:139,ha:236,o:"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 "},"Ν":{x_min:0,x_max:801,ha:915,o:"m 801 0 l 651 0 l 131 822 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 191 l 670 1013 l 801 1013 l 801 0 "},"-":{x_min:8.71875,x_max:350.390625,ha:478,o:"m 350 317 l 8 317 l 8 428 l 350 428 l 350 317 "},Q:{x_min:0,x_max:968,ha:1072,o:"m 954 5 l 887 -79 l 744 35 q 622 -11 687 2 q 483 -26 556 -26 q 127 130 262 -26 q 0 504 0 279 q 127 880 0 728 q 484 1041 262 1041 q 841 884 708 1041 q 968 507 968 735 q 933 293 968 398 q 832 104 899 188 l 954 5 m 723 191 q 802 330 777 248 q 828 499 828 412 q 744 790 828 673 q 483 922 650 922 q 228 791 322 922 q 142 505 142 673 q 227 221 142 337 q 487 91 323 91 q 632 123 566 91 l 520 215 l 587 301 l 723 191 "},"ς":{x_min:1,x_max:676.28125,ha:740,o:"m 676 460 l 551 460 q 498 595 542 546 q 365 651 448 651 q 199 578 263 651 q 136 401 136 505 q 266 178 136 241 q 508 106 387 142 q 640 -50 640 62 q 625 -158 640 -105 q 583 -278 611 -211 l 465 -278 q 498 -182 490 -211 q 515 -80 515 -126 q 381 12 515 -15 q 134 91 197 51 q 1 388 1 179 q 100 651 1 542 q 354 761 199 761 q 587 680 498 761 q 676 460 676 599 "},M:{x_min:0,x_max:954,ha:1067,o:"m 954 0 l 819 0 l 819 869 l 537 0 l 405 0 l 128 866 l 128 0 l 0 0 l 0 1013 l 200 1013 l 472 160 l 757 1013 l 954 1013 l 954 0 "},"Ψ":{x_min:0,x_max:1006,ha:1094,o:"m 1006 678 q 914 319 1006 429 q 571 200 814 200 l 571 0 l 433 0 l 433 200 q 92 319 194 200 q 0 678 0 429 l 0 1013 l 139 1013 l 139 679 q 191 417 139 492 q 433 326 255 326 l 433 1013 l 571 1013 l 571 326 l 580 326 q 813 423 747 326 q 868 679 868 502 l 868 1013 l 1006 1013 l 1006 678 "},C:{x_min:0,x_max:886,ha:944,o:"m 886 379 q 760 87 886 201 q 455 -26 634 -26 q 112 136 236 -26 q 0 509 0 283 q 118 882 0 737 q 469 1041 245 1041 q 748 955 630 1041 q 879 708 879 859 l 745 708 q 649 862 724 805 q 473 920 573 920 q 219 791 312 920 q 136 509 136 675 q 217 229 136 344 q 470 99 311 99 q 672 179 591 99 q 753 379 753 259 l 886 379 "},"!":{x_min:0,x_max:138,ha:236,o:"m 138 684 q 116 409 138 629 q 105 244 105 299 l 33 244 q 16 465 33 313 q 0 684 0 616 l 0 1013 l 138 1013 l 138 684 m 138 0 l 0 0 l 0 151 l 138 151 l 138 0 "},"{":{x_min:0,x_max:480.5625,ha:578,o:"m 480 -286 q 237 -213 303 -286 q 187 -45 187 -159 q 194 48 187 -15 q 201 141 201 112 q 164 264 201 225 q 0 314 118 314 l 0 417 q 164 471 119 417 q 201 605 201 514 q 199 665 201 644 q 193 772 193 769 q 241 941 193 887 q 480 1015 308 1015 l 480 915 q 336 866 375 915 q 306 742 306 828 q 310 662 306 717 q 314 577 314 606 q 288 452 314 500 q 176 365 256 391 q 289 275 257 337 q 314 143 314 226 q 313 84 314 107 q 310 -11 310 -5 q 339 -131 310 -94 q 480 -182 377 -182 l 480 -286 "},X:{x_min:-.015625,x_max:854.15625,ha:940,o:"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 428 637 l 675 1013 l 836 1013 l 504 520 l 854 0 "},"#":{x_min:0,x_max:963.890625,ha:1061,o:"m 963 690 l 927 590 l 719 590 l 655 410 l 876 410 l 840 310 l 618 310 l 508 -3 l 393 -2 l 506 309 l 329 310 l 215 -2 l 102 -3 l 212 310 l 0 310 l 36 410 l 248 409 l 312 590 l 86 590 l 120 690 l 347 690 l 459 1006 l 573 1006 l 462 690 l 640 690 l 751 1006 l 865 1006 l 754 690 l 963 690 m 606 590 l 425 590 l 362 410 l 543 410 l 606 590 "},"ι":{x_min:42,x_max:284,ha:361,o:"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 738 l 167 738 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 103 239 101 q 284 112 257 104 l 284 3 "},"Ά":{x_min:0,x_max:906.953125,ha:982,o:"m 283 1040 l 88 799 l 5 799 l 145 1040 l 283 1040 m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1012 l 529 1012 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 "},")":{x_min:0,x_max:318,ha:415,o:"m 318 365 q 257 25 318 191 q 87 -290 197 -141 l 0 -290 q 140 21 93 -128 q 193 360 193 189 q 141 704 193 537 q 0 1024 97 850 l 87 1024 q 257 706 197 871 q 318 365 318 542 "},"ε":{x_min:0,x_max:634.71875,ha:714,o:"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 314 0 265 q 128 390 67 353 q 56 460 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 "},"Δ":{x_min:0,x_max:952.78125,ha:1028,o:"m 952 0 l 0 0 l 400 1013 l 551 1013 l 952 0 m 762 124 l 476 867 l 187 124 l 762 124 "},"}":{x_min:0,x_max:481,ha:578,o:"m 481 314 q 318 262 364 314 q 282 136 282 222 q 284 65 282 97 q 293 -58 293 -48 q 241 -217 293 -166 q 0 -286 174 -286 l 0 -182 q 143 -130 105 -182 q 171 -2 171 -93 q 168 81 171 22 q 165 144 165 140 q 188 275 165 229 q 306 365 220 339 q 191 455 224 391 q 165 588 165 505 q 168 681 165 624 q 171 742 171 737 q 141 865 171 827 q 0 915 102 915 l 0 1015 q 243 942 176 1015 q 293 773 293 888 q 287 675 293 741 q 282 590 282 608 q 318 466 282 505 q 481 417 364 417 l 481 314 "},"‰":{x_min:-3,x_max:1672,ha:1821,o:"m 846 0 q 664 76 732 0 q 603 244 603 145 q 662 412 603 344 q 846 489 729 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 846 0 962 0 m 845 103 q 945 143 910 103 q 981 243 981 184 q 947 340 981 301 q 845 385 910 385 q 745 342 782 385 q 709 243 709 300 q 742 147 709 186 q 845 103 781 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 m 1428 0 q 1246 76 1314 0 q 1185 244 1185 145 q 1244 412 1185 344 q 1428 489 1311 489 q 1610 412 1542 489 q 1672 244 1672 343 q 1612 76 1672 144 q 1428 0 1545 0 m 1427 103 q 1528 143 1492 103 q 1564 243 1564 184 q 1530 340 1564 301 q 1427 385 1492 385 q 1327 342 1364 385 q 1291 243 1291 300 q 1324 147 1291 186 q 1427 103 1363 103 "},a:{x_min:0,x_max:698.609375,ha:794,o:"m 698 0 q 661 -12 679 -7 q 615 -17 643 -17 q 536 12 564 -17 q 500 96 508 41 q 384 6 456 37 q 236 -25 312 -25 q 65 31 130 -25 q 0 194 0 88 q 118 390 0 334 q 328 435 180 420 q 488 483 476 451 q 495 523 495 504 q 442 619 495 584 q 325 654 389 654 q 209 617 257 654 q 152 513 161 580 l 33 513 q 123 705 33 633 q 332 772 207 772 q 528 712 448 772 q 617 531 617 645 l 617 163 q 624 108 617 126 q 664 90 632 90 l 698 94 l 698 0 m 491 262 l 491 372 q 272 329 350 347 q 128 201 128 294 q 166 113 128 144 q 264 83 205 83 q 414 130 346 83 q 491 262 491 183 "},"—":{x_min:0,x_max:941.671875,ha:1039,o:"m 941 334 l 0 334 l 0 410 l 941 410 l 941 334 "},"=":{x_min:8.71875,x_max:780.953125,ha:792,o:"m 780 510 l 8 510 l 8 606 l 780 606 l 780 510 m 780 235 l 8 235 l 8 332 l 780 332 l 780 235 "},N:{x_min:0,x_max:801,ha:914,o:"m 801 0 l 651 0 l 131 823 l 131 0 l 0 0 l 0 1013 l 151 1013 l 670 193 l 670 1013 l 801 1013 l 801 0 "},"ρ":{x_min:0,x_max:712,ha:797,o:"m 712 369 q 620 94 712 207 q 362 -26 521 -26 q 230 2 292 -26 q 119 83 167 30 l 119 -278 l 0 -278 l 0 362 q 91 643 0 531 q 355 764 190 764 q 617 647 517 764 q 712 369 712 536 m 583 366 q 530 559 583 480 q 359 651 469 651 q 190 562 252 651 q 135 370 135 483 q 189 176 135 257 q 359 85 250 85 q 528 175 466 85 q 583 366 583 254 "},2:{x_min:59,x_max:731,ha:792,o:"m 731 0 l 59 0 q 197 314 59 188 q 457 487 199 315 q 598 691 598 580 q 543 819 598 772 q 411 867 488 867 q 272 811 328 867 q 209 630 209 747 l 81 630 q 182 901 81 805 q 408 986 271 986 q 629 909 536 986 q 731 694 731 826 q 613 449 731 541 q 378 316 495 383 q 201 122 235 234 l 731 122 l 731 0 "},"¯":{x_min:0,x_max:941.671875,ha:938,o:"m 941 1033 l 0 1033 l 0 1109 l 941 1109 l 941 1033 "},Z:{x_min:0,x_max:779,ha:849,o:"m 779 0 l 0 0 l 0 113 l 621 896 l 40 896 l 40 1013 l 779 1013 l 778 887 l 171 124 l 779 124 l 779 0 "},u:{x_min:0,x_max:617,ha:729,o:"m 617 0 l 499 0 l 499 110 q 391 10 460 45 q 246 -25 322 -25 q 61 58 127 -25 q 0 258 0 136 l 0 738 l 125 738 l 125 284 q 156 148 125 202 q 273 82 197 82 q 433 165 369 82 q 493 340 493 243 l 493 738 l 617 738 l 617 0 "},k:{x_min:0,x_max:612.484375,ha:697,o:"m 612 738 l 338 465 l 608 0 l 469 0 l 251 382 l 121 251 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 402 l 456 738 l 612 738 "},"Η":{x_min:0,x_max:803,ha:917,o:"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 "},"Α":{x_min:0,x_max:906.953125,ha:985,o:"m 906 0 l 756 0 l 650 303 l 251 303 l 143 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 609 421 l 452 866 l 293 421 l 609 421 "},s:{x_min:0,x_max:604,ha:697,o:"m 604 217 q 501 36 604 104 q 292 -23 411 -23 q 86 43 166 -23 q 0 238 0 114 l 121 237 q 175 122 121 164 q 300 85 223 85 q 415 112 363 85 q 479 207 479 147 q 361 309 479 276 q 140 372 141 370 q 21 544 21 426 q 111 708 21 647 q 298 761 190 761 q 492 705 413 761 q 583 531 583 643 l 462 531 q 412 625 462 594 q 298 657 363 657 q 199 636 242 657 q 143 558 143 608 q 262 454 143 486 q 484 394 479 397 q 604 217 604 341 "},B:{x_min:0,x_max:778,ha:876,o:"m 580 546 q 724 469 670 535 q 778 311 778 403 q 673 83 778 171 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 892 q 691 633 732 693 q 580 546 650 572 m 393 899 l 139 899 l 139 588 l 379 588 q 521 624 462 588 q 592 744 592 667 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 303 635 219 q 559 436 635 389 q 402 477 494 477 l 139 477 l 139 124 l 419 124 "},"…":{x_min:0,x_max:614,ha:708,o:"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 m 378 0 l 236 0 l 236 151 l 378 151 l 378 0 m 614 0 l 472 0 l 472 151 l 614 151 l 614 0 "},"?":{x_min:0,x_max:607,ha:704,o:"m 607 777 q 543 599 607 674 q 422 474 482 537 q 357 272 357 391 l 236 272 q 297 487 236 395 q 411 619 298 490 q 474 762 474 691 q 422 885 474 838 q 301 933 371 933 q 179 880 228 933 q 124 706 124 819 l 0 706 q 94 963 0 872 q 302 1044 177 1044 q 511 973 423 1044 q 607 777 607 895 m 370 0 l 230 0 l 230 151 l 370 151 l 370 0 "},H:{x_min:0,x_max:803,ha:915,o:"m 803 0 l 667 0 l 667 475 l 140 475 l 140 0 l 0 0 l 0 1013 l 140 1013 l 140 599 l 667 599 l 667 1013 l 803 1013 l 803 0 "},"ν":{x_min:0,x_max:675,ha:761,o:"m 675 738 l 404 0 l 272 0 l 0 738 l 133 738 l 340 147 l 541 738 l 675 738 "},c:{x_min:1,x_max:701.390625,ha:775,o:"m 701 264 q 584 53 681 133 q 353 -26 487 -26 q 91 91 188 -26 q 1 370 1 201 q 92 645 1 537 q 353 761 190 761 q 572 688 479 761 q 690 493 666 615 l 556 493 q 487 606 545 562 q 356 650 428 650 q 186 563 246 650 q 134 372 134 487 q 188 179 134 258 q 359 88 250 88 q 492 136 437 88 q 566 264 548 185 l 701 264 "},"¶":{x_min:0,x_max:566.671875,ha:678,o:"m 21 892 l 52 892 l 98 761 l 145 892 l 176 892 l 178 741 l 157 741 l 157 867 l 108 741 l 88 741 l 40 871 l 40 741 l 21 741 l 21 892 m 308 854 l 308 731 q 252 691 308 691 q 227 691 240 691 q 207 696 213 695 l 207 712 l 253 706 q 288 733 288 706 l 288 763 q 244 741 279 741 q 193 797 193 741 q 261 860 193 860 q 287 860 273 860 q 308 854 302 855 m 288 842 l 263 843 q 213 796 213 843 q 248 756 213 756 q 288 796 288 756 l 288 842 m 566 988 l 502 988 l 502 -1 l 439 -1 l 439 988 l 317 988 l 317 -1 l 252 -1 l 252 602 q 81 653 155 602 q 0 805 0 711 q 101 989 0 918 q 309 1053 194 1053 l 566 1053 l 566 988 "},"β":{x_min:0,x_max:660,ha:745,o:"m 471 550 q 610 450 561 522 q 660 280 660 378 q 578 64 660 151 q 367 -22 497 -22 q 239 5 299 -22 q 126 82 178 32 l 126 -278 l 0 -278 l 0 593 q 54 903 0 801 q 318 1042 127 1042 q 519 964 436 1042 q 603 771 603 887 q 567 644 603 701 q 471 550 532 586 m 337 79 q 476 138 418 79 q 535 279 535 198 q 427 437 535 386 q 226 477 344 477 l 226 583 q 398 620 329 583 q 486 762 486 668 q 435 884 486 833 q 312 935 384 935 q 169 861 219 935 q 126 698 126 797 l 126 362 q 170 169 126 242 q 337 79 224 79 "},"Μ":{x_min:0,x_max:954,ha:1068,o:"m 954 0 l 819 0 l 819 868 l 537 0 l 405 0 l 128 865 l 128 0 l 0 0 l 0 1013 l 199 1013 l 472 158 l 758 1013 l 954 1013 l 954 0 "},"Ό":{x_min:.109375,x_max:1120,ha:1217,o:"m 1120 505 q 994 132 1120 282 q 642 -29 861 -29 q 290 130 422 -29 q 167 505 167 280 q 294 883 167 730 q 650 1046 430 1046 q 999 882 868 1046 q 1120 505 1120 730 m 977 504 q 896 784 977 669 q 644 915 804 915 q 391 785 484 915 q 307 504 307 669 q 391 224 307 339 q 644 95 486 95 q 894 224 803 95 q 977 504 977 339 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"Ή":{x_min:0,x_max:1158,ha:1275,o:"m 1158 0 l 1022 0 l 1022 475 l 496 475 l 496 0 l 356 0 l 356 1012 l 496 1012 l 496 599 l 1022 599 l 1022 1012 l 1158 1012 l 1158 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"•":{x_min:0,x_max:663.890625,ha:775,o:"m 663 529 q 566 293 663 391 q 331 196 469 196 q 97 294 194 196 q 0 529 0 393 q 96 763 0 665 q 331 861 193 861 q 566 763 469 861 q 663 529 663 665 "},"¥":{x_min:.1875,x_max:819.546875,ha:886,o:"m 563 561 l 697 561 l 696 487 l 520 487 l 482 416 l 482 380 l 697 380 l 695 308 l 482 308 l 482 0 l 342 0 l 342 308 l 125 308 l 125 380 l 342 380 l 342 417 l 303 487 l 125 487 l 125 561 l 258 561 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 l 563 561 "},"(":{x_min:0,x_max:318.0625,ha:415,o:"m 318 -290 l 230 -290 q 61 23 122 -142 q 0 365 0 190 q 62 712 0 540 q 230 1024 119 869 l 318 1024 q 175 705 219 853 q 125 360 125 542 q 176 22 125 187 q 318 -290 223 -127 "},U:{x_min:0,x_max:796,ha:904,o:"m 796 393 q 681 93 796 212 q 386 -25 566 -25 q 101 95 208 -25 q 0 393 0 211 l 0 1013 l 138 1013 l 138 391 q 204 191 138 270 q 394 107 276 107 q 586 191 512 107 q 656 391 656 270 l 656 1013 l 796 1013 l 796 393 "},"γ":{x_min:.5,x_max:744.953125,ha:822,o:"m 744 737 l 463 54 l 463 -278 l 338 -278 l 338 54 l 154 495 q 104 597 124 569 q 13 651 67 651 l 0 651 l 0 751 l 39 753 q 168 711 121 753 q 242 594 207 676 l 403 208 l 617 737 l 744 737 "},"α":{x_min:0,x_max:765.5625,ha:809,o:"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 728 407 760 q 563 637 524 696 l 563 739 l 685 739 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 96 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 "},F:{x_min:0,x_max:683.328125,ha:717,o:"m 683 888 l 140 888 l 140 583 l 613 583 l 613 458 l 140 458 l 140 0 l 0 0 l 0 1013 l 683 1013 l 683 888 "},"­":{x_min:0,x_max:705.5625,ha:803,o:"m 705 334 l 0 334 l 0 410 l 705 410 l 705 334 "},":":{x_min:0,x_max:142,ha:239,o:"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 "},"Χ":{x_min:0,x_max:854.171875,ha:935,o:"m 854 0 l 683 0 l 423 409 l 166 0 l 0 0 l 347 519 l 18 1013 l 186 1013 l 427 637 l 675 1013 l 836 1013 l 504 521 l 854 0 "},"*":{x_min:116,x_max:674,ha:792,o:"m 674 768 l 475 713 l 610 544 l 517 477 l 394 652 l 272 478 l 178 544 l 314 713 l 116 766 l 153 876 l 341 812 l 342 1013 l 446 1013 l 446 811 l 635 874 l 674 768 "},"†":{x_min:0,x_max:777,ha:835,o:"m 458 804 l 777 804 l 777 683 l 458 683 l 458 0 l 319 0 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 "},"°":{x_min:0,x_max:347,ha:444,o:"m 173 802 q 43 856 91 802 q 0 977 0 905 q 45 1101 0 1049 q 173 1153 90 1153 q 303 1098 255 1153 q 347 977 347 1049 q 303 856 347 905 q 173 802 256 802 m 173 884 q 238 910 214 884 q 262 973 262 937 q 239 1038 262 1012 q 173 1064 217 1064 q 108 1037 132 1064 q 85 973 85 1010 q 108 910 85 937 q 173 884 132 884 "},V:{x_min:0,x_max:862.71875,ha:940,o:"m 862 1013 l 505 0 l 361 0 l 0 1013 l 143 1013 l 434 165 l 718 1012 l 862 1013 "},"Ξ":{x_min:0,x_max:734.71875,ha:763,o:"m 723 889 l 9 889 l 9 1013 l 723 1013 l 723 889 m 673 463 l 61 463 l 61 589 l 673 589 l 673 463 m 734 0 l 0 0 l 0 124 l 734 124 l 734 0 "}," ":{x_min:0,x_max:0,ha:853},"Ϋ":{x_min:.328125,x_max:819.515625,ha:889,o:"m 588 1046 l 460 1046 l 460 1189 l 588 1189 l 588 1046 m 360 1046 l 232 1046 l 232 1189 l 360 1189 l 360 1046 m 819 1012 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1012 l 140 1012 l 411 533 l 679 1012 l 819 1012 "},0:{x_min:73,x_max:715,ha:792,o:"m 394 -29 q 153 129 242 -29 q 73 479 73 272 q 152 829 73 687 q 394 989 241 989 q 634 829 545 989 q 715 479 715 684 q 635 129 715 270 q 394 -29 546 -29 m 394 89 q 546 211 489 89 q 598 479 598 322 q 548 748 598 640 q 394 871 491 871 q 241 748 298 871 q 190 479 190 637 q 239 211 190 319 q 394 89 296 89 "},"”":{x_min:0,x_max:347,ha:454,o:"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 m 347 851 q 310 737 347 784 q 208 669 273 690 l 208 734 q 267 787 250 741 q 280 873 280 821 l 208 873 l 208 1013 l 347 1013 l 347 851 "},"@":{x_min:0,x_max:1260,ha:1357,o:"m 1098 -45 q 877 -160 1001 -117 q 633 -203 752 -203 q 155 -29 327 -203 q 0 360 0 127 q 176 802 0 616 q 687 1008 372 1008 q 1123 854 969 1008 q 1260 517 1260 718 q 1155 216 1260 341 q 868 82 1044 82 q 772 106 801 82 q 737 202 737 135 q 647 113 700 144 q 527 82 594 82 q 367 147 420 82 q 314 312 314 212 q 401 565 314 452 q 639 690 498 690 q 810 588 760 690 l 849 668 l 938 668 q 877 441 900 532 q 833 226 833 268 q 853 182 833 198 q 902 167 873 167 q 1088 272 1012 167 q 1159 512 1159 372 q 1051 793 1159 681 q 687 925 925 925 q 248 747 415 925 q 97 361 97 586 q 226 26 97 159 q 627 -122 370 -122 q 856 -87 737 -122 q 1061 8 976 -53 l 1098 -45 m 786 488 q 738 580 777 545 q 643 615 700 615 q 483 517 548 615 q 425 322 425 430 q 457 203 425 250 q 552 156 490 156 q 722 273 665 156 q 786 488 738 309 "},"Ί":{x_min:0,x_max:499,ha:613,o:"m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 m 499 0 l 360 0 l 360 1012 l 499 1012 l 499 0 "},i:{x_min:14,x_max:136,ha:275,o:"m 136 873 l 14 873 l 14 1013 l 136 1013 l 136 873 m 136 0 l 14 0 l 14 737 l 136 737 l 136 0 "},"Β":{x_min:0,x_max:778,ha:877,o:"m 580 545 q 724 468 671 534 q 778 310 778 402 q 673 83 778 170 q 432 0 575 0 l 0 0 l 0 1013 l 411 1013 q 629 957 541 1013 q 732 768 732 891 q 691 632 732 692 q 580 545 650 571 m 393 899 l 139 899 l 139 587 l 379 587 q 521 623 462 587 q 592 744 592 666 q 531 859 592 819 q 393 899 471 899 m 419 124 q 566 169 504 124 q 635 302 635 219 q 559 435 635 388 q 402 476 494 476 l 139 476 l 139 124 l 419 124 "},"υ":{x_min:0,x_max:617,ha:725,o:"m 617 352 q 540 94 617 199 q 308 -24 455 -24 q 76 94 161 -24 q 0 352 0 199 l 0 739 l 126 739 l 126 355 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 355 492 257 l 492 739 l 617 739 l 617 352 "},"]":{x_min:0,x_max:275,ha:372,o:"m 275 -281 l 0 -281 l 0 -187 l 151 -187 l 151 920 l 0 920 l 0 1013 l 275 1013 l 275 -281 "},m:{x_min:0,x_max:1019,ha:1128,o:"m 1019 0 l 897 0 l 897 454 q 860 591 897 536 q 739 660 816 660 q 613 586 659 660 q 573 436 573 522 l 573 0 l 447 0 l 447 455 q 412 591 447 535 q 294 657 372 657 q 165 586 213 657 q 122 437 122 521 l 122 0 l 0 0 l 0 738 l 117 738 l 117 640 q 202 730 150 697 q 316 763 254 763 q 437 730 381 763 q 525 642 494 697 q 621 731 559 700 q 753 763 682 763 q 943 694 867 763 q 1019 512 1019 625 l 1019 0 "},"χ":{x_min:8.328125,x_max:780.5625,ha:815,o:"m 780 -278 q 715 -294 747 -294 q 616 -257 663 -294 q 548 -175 576 -227 l 379 133 l 143 -277 l 9 -277 l 313 254 l 163 522 q 127 586 131 580 q 36 640 91 640 q 8 637 27 640 l 8 752 l 52 757 q 162 719 113 757 q 236 627 200 690 l 383 372 l 594 737 l 726 737 l 448 250 l 625 -69 q 670 -153 647 -110 q 743 -188 695 -188 q 780 -184 759 -188 l 780 -278 "},8:{x_min:55,x_max:736,ha:792,o:"m 571 527 q 694 424 652 491 q 736 280 736 358 q 648 71 736 158 q 395 -26 551 -26 q 142 69 238 -26 q 55 279 55 157 q 96 425 55 359 q 220 527 138 491 q 120 615 153 562 q 88 726 88 668 q 171 904 88 827 q 395 986 261 986 q 618 905 529 986 q 702 727 702 830 q 670 616 702 667 q 571 527 638 565 m 394 565 q 519 610 475 565 q 563 717 563 655 q 521 823 563 781 q 392 872 474 872 q 265 824 312 872 q 224 720 224 783 q 265 613 224 656 q 394 565 312 565 m 395 91 q 545 150 488 91 q 597 280 597 204 q 546 408 597 355 q 395 465 492 465 q 244 408 299 465 q 194 280 194 356 q 244 150 194 203 q 395 91 299 91 "},"ί":{x_min:42,x_max:326.71875,ha:361,o:"m 284 3 q 233 -10 258 -5 q 182 -15 207 -15 q 85 26 119 -15 q 42 200 42 79 l 42 737 l 167 737 l 168 215 q 172 141 168 157 q 226 101 183 101 q 248 102 239 101 q 284 112 257 104 l 284 3 m 326 1040 l 137 819 l 54 819 l 189 1040 l 326 1040 "},"Ζ":{x_min:0,x_max:779.171875,ha:850,o:"m 779 0 l 0 0 l 0 113 l 620 896 l 40 896 l 40 1013 l 779 1013 l 779 887 l 170 124 l 779 124 l 779 0 "},R:{x_min:0,x_max:781.953125,ha:907,o:"m 781 0 l 623 0 q 587 242 590 52 q 407 433 585 433 l 138 433 l 138 0 l 0 0 l 0 1013 l 396 1013 q 636 946 539 1013 q 749 731 749 868 q 711 597 749 659 q 608 502 674 534 q 718 370 696 474 q 729 207 722 352 q 781 26 736 62 l 781 0 m 373 551 q 533 594 465 551 q 614 731 614 645 q 532 859 614 815 q 373 896 465 896 l 138 896 l 138 551 l 373 551 "},o:{x_min:0,x_max:713,ha:821,o:"m 357 -25 q 94 91 194 -25 q 0 368 0 202 q 93 642 0 533 q 357 761 193 761 q 618 644 518 761 q 713 368 713 533 q 619 91 713 201 q 357 -25 521 -25 m 357 85 q 528 175 465 85 q 584 369 584 255 q 529 562 584 484 q 357 651 467 651 q 189 560 250 651 q 135 369 135 481 q 187 177 135 257 q 357 85 250 85 "},5:{x_min:54.171875,x_max:738,ha:792,o:"m 738 314 q 626 60 738 153 q 382 -23 526 -23 q 155 47 248 -23 q 54 256 54 125 l 183 256 q 259 132 204 174 q 382 91 314 91 q 533 149 471 91 q 602 314 602 213 q 538 469 602 411 q 386 528 475 528 q 284 506 332 528 q 197 439 237 484 l 81 439 l 159 958 l 684 958 l 684 840 l 254 840 l 214 579 q 306 627 258 612 q 407 643 354 643 q 636 552 540 643 q 738 314 738 457 "},7:{x_min:58.71875,x_max:730.953125,ha:792,o:"m 730 839 q 469 448 560 641 q 335 0 378 255 l 192 0 q 328 441 235 252 q 593 830 421 630 l 58 830 l 58 958 l 730 958 l 730 839 "},K:{x_min:0,x_max:819.46875,ha:906,o:"m 819 0 l 649 0 l 294 509 l 139 355 l 139 0 l 0 0 l 0 1013 l 139 1013 l 139 526 l 626 1013 l 809 1013 l 395 600 l 819 0 "},",":{x_min:0,x_max:142,ha:239,o:"m 142 -12 q 105 -132 142 -82 q 0 -205 68 -182 l 0 -138 q 57 -82 40 -124 q 70 0 70 -51 l 0 0 l 0 151 l 142 151 l 142 -12 "},d:{x_min:0,x_max:683,ha:796,o:"m 683 0 l 564 0 l 564 93 q 456 6 516 38 q 327 -25 395 -25 q 87 100 181 -25 q 0 365 0 215 q 90 639 0 525 q 343 763 187 763 q 564 647 486 763 l 564 1013 l 683 1013 l 683 0 m 582 373 q 529 562 582 484 q 361 653 468 653 q 190 561 253 653 q 135 365 135 479 q 189 175 135 254 q 358 85 251 85 q 529 178 468 85 q 582 373 582 258 "},"¨":{x_min:-109,x_max:247,ha:232,o:"m 247 1046 l 119 1046 l 119 1189 l 247 1189 l 247 1046 m 19 1046 l -109 1046 l -109 1189 l 19 1189 l 19 1046 "},E:{x_min:0,x_max:736.109375,ha:789,o:"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 "},Y:{x_min:0,x_max:820,ha:886,o:"m 820 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 534 l 679 1012 l 820 1013 "},'"':{x_min:0,x_max:299,ha:396,o:"m 299 606 l 203 606 l 203 988 l 299 988 l 299 606 m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 "},"‹":{x_min:17.984375,x_max:773.609375,ha:792,o:"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 "},"„":{x_min:0,x_max:364,ha:467,o:"m 141 -12 q 104 -132 141 -82 q 0 -205 67 -182 l 0 -138 q 56 -82 40 -124 q 69 0 69 -51 l 0 0 l 0 151 l 141 151 l 141 -12 m 364 -12 q 327 -132 364 -82 q 222 -205 290 -182 l 222 -138 q 279 -82 262 -124 q 292 0 292 -51 l 222 0 l 222 151 l 364 151 l 364 -12 "},"δ":{x_min:1,x_max:710,ha:810,o:"m 710 360 q 616 87 710 196 q 356 -28 518 -28 q 99 82 197 -28 q 1 356 1 192 q 100 606 1 509 q 355 703 199 703 q 180 829 288 754 q 70 903 124 866 l 70 1012 l 643 1012 l 643 901 l 258 901 q 462 763 422 794 q 636 592 577 677 q 710 360 710 485 m 584 365 q 552 501 584 447 q 451 602 521 555 q 372 611 411 611 q 197 541 258 611 q 136 355 136 472 q 190 171 136 245 q 358 85 252 85 q 528 173 465 85 q 584 365 584 252 "},"έ":{x_min:0,x_max:634.71875,ha:714,o:"m 634 234 q 527 38 634 110 q 300 -25 433 -25 q 98 29 183 -25 q 0 204 0 93 q 37 313 0 265 q 128 390 67 352 q 56 459 82 419 q 26 555 26 505 q 114 712 26 654 q 295 763 191 763 q 499 700 416 763 q 589 515 589 631 l 478 515 q 419 618 464 580 q 307 657 374 657 q 207 630 253 657 q 151 547 151 598 q 238 445 151 469 q 389 434 280 434 l 389 331 l 349 331 q 206 315 255 331 q 125 210 125 287 q 183 107 125 145 q 302 76 233 76 q 436 117 379 76 q 509 234 493 159 l 634 234 m 520 1040 l 331 819 l 248 819 l 383 1040 l 520 1040 "},"ω":{x_min:0,x_max:922,ha:1031,o:"m 922 339 q 856 97 922 203 q 650 -26 780 -26 q 538 9 587 -26 q 461 103 489 44 q 387 12 436 46 q 277 -22 339 -22 q 69 97 147 -22 q 0 339 0 203 q 45 551 0 444 q 161 738 84 643 l 302 738 q 175 553 219 647 q 124 336 124 446 q 155 179 124 249 q 275 88 197 88 q 375 163 341 88 q 400 294 400 219 l 400 572 l 524 572 l 524 294 q 561 135 524 192 q 643 88 591 88 q 762 182 719 88 q 797 342 797 257 q 745 556 797 450 q 619 738 705 638 l 760 738 q 874 551 835 640 q 922 339 922 444 "},"´":{x_min:0,x_max:96,ha:251,o:"m 96 606 l 0 606 l 0 988 l 96 988 l 96 606 "},"±":{x_min:11,x_max:781,ha:792,o:"m 781 490 l 446 490 l 446 255 l 349 255 l 349 490 l 11 490 l 11 586 l 349 586 l 349 819 l 446 819 l 446 586 l 781 586 l 781 490 m 781 21 l 11 21 l 11 115 l 781 115 l 781 21 "},"|":{x_min:343,x_max:449,ha:792,o:"m 449 462 l 343 462 l 343 986 l 449 986 l 449 462 m 449 -242 l 343 -242 l 343 280 l 449 280 l 449 -242 "},"ϋ":{x_min:0,x_max:617,ha:725,o:"m 482 800 l 372 800 l 372 925 l 482 925 l 482 800 m 239 800 l 129 800 l 129 925 l 239 925 l 239 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 "},"§":{x_min:0,x_max:593,ha:690,o:"m 593 425 q 554 312 593 369 q 467 233 516 254 q 537 83 537 172 q 459 -74 537 -12 q 288 -133 387 -133 q 115 -69 184 -133 q 47 96 47 -6 l 166 96 q 199 7 166 40 q 288 -26 232 -26 q 371 -5 332 -26 q 420 60 420 21 q 311 201 420 139 q 108 309 210 255 q 0 490 0 383 q 33 602 0 551 q 124 687 66 654 q 75 743 93 712 q 58 812 58 773 q 133 984 58 920 q 300 1043 201 1043 q 458 987 394 1043 q 529 814 529 925 l 411 814 q 370 908 404 877 q 289 939 336 939 q 213 911 246 939 q 180 841 180 883 q 286 720 180 779 q 484 612 480 615 q 593 425 593 534 m 467 409 q 355 544 467 473 q 196 630 228 612 q 146 587 162 609 q 124 525 124 558 q 239 387 124 462 q 398 298 369 315 q 448 345 429 316 q 467 409 467 375 "},b:{x_min:0,x_max:685,ha:783,o:"m 685 372 q 597 99 685 213 q 347 -25 501 -25 q 219 5 277 -25 q 121 93 161 36 l 121 0 l 0 0 l 0 1013 l 121 1013 l 121 634 q 214 723 157 692 q 341 754 272 754 q 591 637 493 754 q 685 372 685 526 m 554 356 q 499 550 554 470 q 328 644 437 644 q 162 556 223 644 q 108 369 108 478 q 160 176 108 256 q 330 83 221 83 q 498 169 435 83 q 554 356 554 245 "},q:{x_min:0,x_max:683,ha:876,o:"m 683 -278 l 564 -278 l 564 97 q 474 8 533 39 q 345 -23 415 -23 q 91 93 188 -23 q 0 364 0 203 q 87 635 0 522 q 337 760 184 760 q 466 727 408 760 q 564 637 523 695 l 564 737 l 683 737 l 683 -278 m 582 375 q 527 564 582 488 q 358 652 466 652 q 190 565 253 652 q 135 377 135 488 q 189 179 135 261 q 361 84 251 84 q 530 179 469 84 q 582 375 582 260 "},"Ω":{x_min:-.171875,x_max:969.5625,ha:1068,o:"m 969 0 l 555 0 l 555 123 q 744 308 675 194 q 814 558 814 423 q 726 812 814 709 q 484 922 633 922 q 244 820 334 922 q 154 567 154 719 q 223 316 154 433 q 412 123 292 199 l 412 0 l 0 0 l 0 124 l 217 124 q 68 327 122 210 q 15 572 15 444 q 144 911 15 781 q 484 1041 274 1041 q 822 909 691 1041 q 953 569 953 777 q 899 326 953 443 q 750 124 846 210 l 969 124 l 969 0 "},"ύ":{x_min:0,x_max:617,ha:725,o:"m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 535 1040 l 346 819 l 262 819 l 397 1040 l 535 1040 "},z:{x_min:-.015625,x_max:613.890625,ha:697,o:"m 613 0 l 0 0 l 0 100 l 433 630 l 20 630 l 20 738 l 594 738 l 593 636 l 163 110 l 613 110 l 613 0 "},"™":{x_min:0,x_max:894,ha:1e3,o:"m 389 951 l 229 951 l 229 503 l 160 503 l 160 951 l 0 951 l 0 1011 l 389 1011 l 389 951 m 894 503 l 827 503 l 827 939 l 685 503 l 620 503 l 481 937 l 481 503 l 417 503 l 417 1011 l 517 1011 l 653 580 l 796 1010 l 894 1011 l 894 503 "},"ή":{x_min:.78125,x_max:697,ha:810,o:"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 721 124 755 q 200 630 193 687 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 m 479 1040 l 290 819 l 207 819 l 341 1040 l 479 1040 "},"Θ":{x_min:0,x_max:960,ha:1056,o:"m 960 507 q 833 129 960 280 q 476 -32 698 -32 q 123 129 255 -32 q 0 507 0 280 q 123 883 0 732 q 476 1045 255 1045 q 832 883 696 1045 q 960 507 960 732 m 817 500 q 733 789 817 669 q 476 924 639 924 q 223 792 317 924 q 142 507 142 675 q 222 222 142 339 q 476 89 315 89 q 730 218 636 89 q 817 500 817 334 m 716 449 l 243 449 l 243 571 l 716 571 l 716 449 "},"®":{x_min:-3,x_max:1008,ha:1106,o:"m 503 532 q 614 562 566 532 q 672 658 672 598 q 614 747 672 716 q 503 772 569 772 l 338 772 l 338 532 l 503 532 m 502 -7 q 123 151 263 -7 q -3 501 -3 294 q 123 851 -3 706 q 502 1011 263 1011 q 881 851 739 1011 q 1008 501 1008 708 q 883 151 1008 292 q 502 -7 744 -7 m 502 60 q 830 197 709 60 q 940 501 940 322 q 831 805 940 681 q 502 944 709 944 q 174 805 296 944 q 65 501 65 680 q 173 197 65 320 q 502 60 294 60 m 788 146 l 678 146 q 653 316 655 183 q 527 449 652 449 l 338 449 l 338 146 l 241 146 l 241 854 l 518 854 q 688 808 621 854 q 766 658 766 755 q 739 563 766 607 q 668 497 713 519 q 751 331 747 472 q 788 164 756 190 l 788 146 "},"~":{x_min:0,x_max:833,ha:931,o:"m 833 958 q 778 753 833 831 q 594 665 716 665 q 402 761 502 665 q 240 857 302 857 q 131 795 166 857 q 104 665 104 745 l 0 665 q 54 867 0 789 q 237 958 116 958 q 429 861 331 958 q 594 765 527 765 q 704 827 670 765 q 729 958 729 874 l 833 958 "},"Ε":{x_min:0,x_max:736.21875,ha:778,o:"m 736 0 l 0 0 l 0 1013 l 725 1013 l 725 889 l 139 889 l 139 585 l 677 585 l 677 467 l 139 467 l 139 125 l 736 125 l 736 0 "},"³":{x_min:0,x_max:450,ha:547,o:"m 450 552 q 379 413 450 464 q 220 366 313 366 q 69 414 130 366 q 0 567 0 470 l 85 567 q 126 470 85 504 q 225 437 168 437 q 320 467 280 437 q 360 552 360 498 q 318 632 360 608 q 213 657 276 657 q 195 657 203 657 q 176 657 181 657 l 176 722 q 279 733 249 722 q 334 815 334 752 q 300 881 334 856 q 220 907 267 907 q 133 875 169 907 q 97 781 97 844 l 15 781 q 78 926 15 875 q 220 972 135 972 q 364 930 303 972 q 426 817 426 888 q 344 697 426 733 q 421 642 392 681 q 450 552 450 603 "},"[":{x_min:0,x_max:273.609375,ha:371,o:"m 273 -281 l 0 -281 l 0 1013 l 273 1013 l 273 920 l 124 920 l 124 -187 l 273 -187 l 273 -281 "},L:{x_min:0,x_max:645.828125,ha:696,o:"m 645 0 l 0 0 l 0 1013 l 140 1013 l 140 126 l 645 126 l 645 0 "},"σ":{x_min:0,x_max:803.390625,ha:894,o:"m 803 628 l 633 628 q 713 368 713 512 q 618 93 713 204 q 357 -25 518 -25 q 94 91 194 -25 q 0 368 0 201 q 94 644 0 533 q 356 761 194 761 q 481 750 398 761 q 608 739 564 739 l 803 739 l 803 628 m 360 85 q 529 180 467 85 q 584 374 584 262 q 527 566 584 490 q 352 651 463 651 q 187 559 247 651 q 135 368 135 478 q 189 175 135 254 q 360 85 251 85 "},"ζ":{x_min:0,x_max:573,ha:642,o:"m 573 -40 q 553 -162 573 -97 q 510 -278 543 -193 l 400 -278 q 441 -187 428 -219 q 462 -90 462 -132 q 378 -14 462 -14 q 108 45 197 -14 q 0 290 0 117 q 108 631 0 462 q 353 901 194 767 l 55 901 l 55 1012 l 561 1012 l 561 924 q 261 669 382 831 q 128 301 128 489 q 243 117 128 149 q 458 98 350 108 q 573 -40 573 80 "},"θ":{x_min:0,x_max:674,ha:778,o:"m 674 496 q 601 160 674 304 q 336 -26 508 -26 q 73 153 165 -26 q 0 485 0 296 q 72 840 0 683 q 343 1045 166 1045 q 605 844 516 1045 q 674 496 674 692 m 546 579 q 498 798 546 691 q 336 935 437 935 q 178 798 237 935 q 126 579 137 701 l 546 579 m 546 475 l 126 475 q 170 233 126 348 q 338 80 230 80 q 504 233 447 80 q 546 475 546 346 "},"Ο":{x_min:0,x_max:958,ha:1054,o:"m 485 1042 q 834 883 703 1042 q 958 511 958 735 q 834 136 958 287 q 481 -26 701 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 729 q 485 1042 263 1042 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 670 q 480 913 640 913 q 226 785 321 913 q 142 504 142 671 q 226 224 142 339 q 480 98 319 98 "},"Γ":{x_min:0,x_max:705.28125,ha:749,o:"m 705 886 l 140 886 l 140 0 l 0 0 l 0 1012 l 705 1012 l 705 886 "},"%":{x_min:-3,x_max:1089,ha:1186,o:"m 845 0 q 663 76 731 0 q 602 244 602 145 q 661 412 602 344 q 845 489 728 489 q 1027 412 959 489 q 1089 244 1089 343 q 1029 76 1089 144 q 845 0 962 0 m 844 103 q 945 143 909 103 q 981 243 981 184 q 947 340 981 301 q 844 385 909 385 q 744 342 781 385 q 708 243 708 300 q 741 147 708 186 q 844 103 780 103 m 888 986 l 284 -25 l 199 -25 l 803 986 l 888 986 m 241 468 q 58 545 126 468 q -3 715 -3 615 q 56 881 -3 813 q 238 958 124 958 q 421 881 353 958 q 483 712 483 813 q 423 544 483 612 q 241 468 356 468 m 241 855 q 137 811 175 855 q 100 710 100 768 q 136 612 100 653 q 240 572 172 572 q 344 614 306 572 q 382 713 382 656 q 347 810 382 771 q 241 855 308 855 "},P:{x_min:0,x_max:726,ha:806,o:"m 424 1013 q 640 931 555 1013 q 726 719 726 850 q 637 506 726 587 q 413 426 548 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 379 889 l 140 889 l 140 548 l 372 548 q 522 589 459 548 q 593 720 593 637 q 528 845 593 801 q 379 889 463 889 "},"Έ":{x_min:0,x_max:1078.21875,ha:1118,o:"m 1078 0 l 342 0 l 342 1013 l 1067 1013 l 1067 889 l 481 889 l 481 585 l 1019 585 l 1019 467 l 481 467 l 481 125 l 1078 125 l 1078 0 m 277 1040 l 83 799 l 0 799 l 140 1040 l 277 1040 "},"Ώ":{x_min:.125,x_max:1136.546875,ha:1235,o:"m 1136 0 l 722 0 l 722 123 q 911 309 842 194 q 981 558 981 423 q 893 813 981 710 q 651 923 800 923 q 411 821 501 923 q 321 568 321 720 q 390 316 321 433 q 579 123 459 200 l 579 0 l 166 0 l 166 124 l 384 124 q 235 327 289 210 q 182 572 182 444 q 311 912 182 782 q 651 1042 441 1042 q 989 910 858 1042 q 1120 569 1120 778 q 1066 326 1120 443 q 917 124 1013 210 l 1136 124 l 1136 0 m 277 1040 l 83 800 l 0 800 l 140 1041 l 277 1040 "},_:{x_min:0,x_max:705.5625,ha:803,o:"m 705 -334 l 0 -334 l 0 -234 l 705 -234 l 705 -334 "},"Ϊ":{x_min:-110,x_max:246,ha:275,o:"m 246 1046 l 118 1046 l 118 1189 l 246 1189 l 246 1046 m 18 1046 l -110 1046 l -110 1189 l 18 1189 l 18 1046 m 136 0 l 0 0 l 0 1012 l 136 1012 l 136 0 "},"+":{x_min:23,x_max:768,ha:792,o:"m 768 372 l 444 372 l 444 0 l 347 0 l 347 372 l 23 372 l 23 468 l 347 468 l 347 840 l 444 840 l 444 468 l 768 468 l 768 372 "},"½":{x_min:0,x_max:1050,ha:1149,o:"m 1050 0 l 625 0 q 712 178 625 108 q 878 277 722 187 q 967 385 967 328 q 932 456 967 429 q 850 484 897 484 q 759 450 798 484 q 721 352 721 416 l 640 352 q 706 502 640 448 q 851 551 766 551 q 987 509 931 551 q 1050 385 1050 462 q 976 251 1050 301 q 829 179 902 215 q 717 68 740 133 l 1050 68 l 1050 0 m 834 985 l 215 -28 l 130 -28 l 750 984 l 834 985 m 224 422 l 142 422 l 142 811 l 0 811 l 0 867 q 104 889 62 867 q 164 973 157 916 l 224 973 l 224 422 "},"Ρ":{x_min:0,x_max:720,ha:783,o:"m 424 1013 q 637 933 554 1013 q 720 723 720 853 q 633 508 720 591 q 413 426 546 426 l 140 426 l 140 0 l 0 0 l 0 1013 l 424 1013 m 378 889 l 140 889 l 140 548 l 371 548 q 521 589 458 548 q 592 720 592 637 q 527 845 592 801 q 378 889 463 889 "},"'":{x_min:0,x_max:139,ha:236,o:"m 139 851 q 102 737 139 784 q 0 669 65 690 l 0 734 q 59 787 42 741 q 72 873 72 821 l 0 873 l 0 1013 l 139 1013 l 139 851 "},"ª":{x_min:0,x_max:350,ha:397,o:"m 350 625 q 307 616 328 616 q 266 631 281 616 q 247 673 251 645 q 190 628 225 644 q 116 613 156 613 q 32 641 64 613 q 0 722 0 669 q 72 826 0 800 q 247 866 159 846 l 247 887 q 220 934 247 916 q 162 953 194 953 q 104 934 129 953 q 76 882 80 915 l 16 882 q 60 976 16 941 q 166 1011 104 1011 q 266 979 224 1011 q 308 891 308 948 l 308 706 q 311 679 308 688 q 331 670 315 670 l 350 672 l 350 625 m 247 757 l 247 811 q 136 790 175 798 q 64 726 64 773 q 83 682 64 697 q 132 667 103 667 q 207 690 174 667 q 247 757 247 718 "},"΅":{x_min:0,x_max:450,ha:553,o:"m 450 800 l 340 800 l 340 925 l 450 925 l 450 800 m 406 1040 l 212 800 l 129 800 l 269 1040 l 406 1040 m 110 800 l 0 800 l 0 925 l 110 925 l 110 800 "},T:{x_min:0,x_max:777,ha:835,o:"m 777 894 l 458 894 l 458 0 l 319 0 l 319 894 l 0 894 l 0 1013 l 777 1013 l 777 894 "},"Φ":{x_min:0,x_max:915,ha:997,o:"m 527 0 l 389 0 l 389 122 q 110 231 220 122 q 0 509 0 340 q 110 785 0 677 q 389 893 220 893 l 389 1013 l 527 1013 l 527 893 q 804 786 693 893 q 915 509 915 679 q 805 231 915 341 q 527 122 696 122 l 527 0 m 527 226 q 712 310 641 226 q 779 507 779 389 q 712 705 779 627 q 527 787 641 787 l 527 226 m 389 226 l 389 787 q 205 698 275 775 q 136 505 136 620 q 206 308 136 391 q 389 226 276 226 "},"⁋":{x_min:0,x_max:0,ha:694},j:{x_min:-77.78125,x_max:167,ha:349,o:"m 167 871 l 42 871 l 42 1013 l 167 1013 l 167 871 m 167 -80 q 121 -231 167 -184 q -26 -278 76 -278 l -77 -278 l -77 -164 l -41 -164 q 26 -143 11 -164 q 42 -65 42 -122 l 42 737 l 167 737 l 167 -80 "},"Σ":{x_min:0,x_max:756.953125,ha:819,o:"m 756 0 l 0 0 l 0 107 l 395 523 l 22 904 l 22 1013 l 745 1013 l 745 889 l 209 889 l 566 523 l 187 125 l 756 125 l 756 0 "},1:{x_min:215.671875,x_max:574,ha:792,o:"m 574 0 l 442 0 l 442 697 l 215 697 l 215 796 q 386 833 330 796 q 475 986 447 875 l 574 986 l 574 0 "},"›":{x_min:18.0625,x_max:774,ha:792,o:"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 "},"<":{x_min:17.984375,x_max:773.609375,ha:792,o:"m 773 40 l 18 376 l 17 465 l 773 799 l 773 692 l 159 420 l 773 149 l 773 40 "},"£":{x_min:0,x_max:704.484375,ha:801,o:"m 704 41 q 623 -10 664 5 q 543 -26 583 -26 q 359 15 501 -26 q 243 36 288 36 q 158 23 197 36 q 73 -21 119 10 l 6 76 q 125 195 90 150 q 175 331 175 262 q 147 443 175 383 l 0 443 l 0 512 l 108 512 q 43 734 43 623 q 120 929 43 854 q 358 1010 204 1010 q 579 936 487 1010 q 678 729 678 857 l 678 684 l 552 684 q 504 838 552 780 q 362 896 457 896 q 216 852 263 896 q 176 747 176 815 q 199 627 176 697 q 248 512 217 574 l 468 512 l 468 443 l 279 443 q 297 356 297 398 q 230 194 297 279 q 153 107 211 170 q 227 133 190 125 q 293 142 264 142 q 410 119 339 142 q 516 96 482 96 q 579 105 550 96 q 648 142 608 115 l 704 41 "},t:{x_min:0,x_max:367,ha:458,o:"m 367 0 q 312 -5 339 -2 q 262 -8 284 -8 q 145 28 183 -8 q 108 143 108 64 l 108 638 l 0 638 l 0 738 l 108 738 l 108 944 l 232 944 l 232 738 l 367 738 l 367 638 l 232 638 l 232 185 q 248 121 232 140 q 307 102 264 102 q 345 104 330 102 q 367 107 360 107 l 367 0 "},"¬":{x_min:0,x_max:706,ha:803,o:"m 706 411 l 706 158 l 630 158 l 630 335 l 0 335 l 0 411 l 706 411 "},"λ":{x_min:0,x_max:750,ha:803,o:"m 750 -7 q 679 -15 716 -15 q 538 59 591 -15 q 466 214 512 97 l 336 551 l 126 0 l 0 0 l 270 705 q 223 837 247 770 q 116 899 190 899 q 90 898 100 899 l 90 1004 q 152 1011 125 1011 q 298 938 244 1011 q 373 783 326 901 l 605 192 q 649 115 629 136 q 716 95 669 95 l 736 95 q 750 97 745 97 l 750 -7 "},W:{x_min:0,x_max:1263.890625,ha:1351,o:"m 1263 1013 l 995 0 l 859 0 l 627 837 l 405 0 l 265 0 l 0 1013 l 136 1013 l 342 202 l 556 1013 l 701 1013 l 921 207 l 1133 1012 l 1263 1013 "},">":{x_min:18.0625,x_max:774,ha:792,o:"m 774 376 l 18 40 l 18 149 l 631 421 l 18 692 l 18 799 l 774 465 l 774 376 "},v:{x_min:0,x_max:675.15625,ha:761,o:"m 675 738 l 404 0 l 272 0 l 0 738 l 133 737 l 340 147 l 541 737 l 675 738 "},"τ":{x_min:.28125,x_max:644.5,ha:703,o:"m 644 628 l 382 628 l 382 179 q 388 120 382 137 q 436 91 401 91 q 474 94 447 91 q 504 97 501 97 l 504 0 q 454 -9 482 -5 q 401 -14 426 -14 q 278 67 308 -14 q 260 233 260 118 l 260 628 l 0 628 l 0 739 l 644 739 l 644 628 "},"ξ":{x_min:0,x_max:624.9375,ha:699,o:"m 624 -37 q 608 -153 624 -96 q 563 -278 593 -211 l 454 -278 q 491 -183 486 -200 q 511 -83 511 -126 q 484 -23 511 -44 q 370 1 452 1 q 323 0 354 1 q 283 -1 293 -1 q 84 76 169 -1 q 0 266 0 154 q 56 431 0 358 q 197 538 108 498 q 94 613 134 562 q 54 730 54 665 q 77 823 54 780 q 143 901 101 867 l 27 901 l 27 1012 l 576 1012 l 576 901 l 380 901 q 244 863 303 901 q 178 745 178 820 q 312 600 178 636 q 532 582 380 582 l 532 479 q 276 455 361 479 q 118 281 118 410 q 165 173 118 217 q 274 120 208 133 q 494 101 384 110 q 624 -37 624 76 "},"&":{x_min:-3,x_max:894.25,ha:992,o:"m 894 0 l 725 0 l 624 123 q 471 0 553 40 q 306 -41 390 -41 q 168 -7 231 -41 q 62 92 105 26 q 14 187 31 139 q -3 276 -3 235 q 55 433 -3 358 q 248 581 114 508 q 170 689 196 640 q 137 817 137 751 q 214 985 137 922 q 384 1041 284 1041 q 548 988 483 1041 q 622 824 622 928 q 563 666 622 739 q 431 556 516 608 l 621 326 q 649 407 639 361 q 663 493 653 426 l 781 493 q 703 229 781 352 l 894 0 m 504 818 q 468 908 504 877 q 384 940 433 940 q 293 907 331 940 q 255 818 255 875 q 289 714 255 767 q 363 628 313 678 q 477 729 446 682 q 504 818 504 771 m 556 209 l 314 499 q 179 395 223 449 q 135 283 135 341 q 146 222 135 253 q 183 158 158 192 q 333 80 241 80 q 556 209 448 80 "},"Λ":{x_min:0,x_max:862.5,ha:942,o:"m 862 0 l 719 0 l 426 847 l 143 0 l 0 0 l 356 1013 l 501 1013 l 862 0 "},I:{x_min:41,x_max:180,ha:293,o:"m 180 0 l 41 0 l 41 1013 l 180 1013 l 180 0 "},G:{x_min:0,x_max:921,ha:1011,o:"m 921 0 l 832 0 l 801 136 q 655 15 741 58 q 470 -28 568 -28 q 126 133 259 -28 q 0 499 0 284 q 125 881 0 731 q 486 1043 259 1043 q 763 957 647 1043 q 905 709 890 864 l 772 709 q 668 866 747 807 q 486 926 589 926 q 228 795 322 926 q 142 507 142 677 q 228 224 142 342 q 483 94 323 94 q 712 195 625 94 q 796 435 796 291 l 477 435 l 477 549 l 921 549 l 921 0 "},"ΰ":{x_min:0,x_max:617,ha:725,o:"m 524 800 l 414 800 l 414 925 l 524 925 l 524 800 m 183 800 l 73 800 l 73 925 l 183 925 l 183 800 m 617 352 q 540 93 617 199 q 308 -24 455 -24 q 76 93 161 -24 q 0 352 0 199 l 0 738 l 126 738 l 126 354 q 169 185 126 257 q 312 98 220 98 q 451 185 402 98 q 492 354 492 257 l 492 738 l 617 738 l 617 352 m 489 1040 l 300 819 l 216 819 l 351 1040 l 489 1040 "},"`":{x_min:0,x_max:138.890625,ha:236,o:"m 138 699 l 0 699 l 0 861 q 36 974 0 929 q 138 1041 72 1020 l 138 977 q 82 931 95 969 q 69 839 69 893 l 138 839 l 138 699 "},"·":{x_min:0,x_max:142,ha:239,o:"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 "},"Υ":{x_min:.328125,x_max:819.515625,ha:889,o:"m 819 1013 l 482 416 l 482 0 l 342 0 l 342 416 l 0 1013 l 140 1013 l 411 533 l 679 1013 l 819 1013 "},r:{x_min:0,x_max:355.5625,ha:432,o:"m 355 621 l 343 621 q 179 569 236 621 q 122 411 122 518 l 122 0 l 0 0 l 0 737 l 117 737 l 117 604 q 204 719 146 686 q 355 753 262 753 l 355 621 "},x:{x_min:0,x_max:675,ha:764,o:"m 675 0 l 525 0 l 331 286 l 144 0 l 0 0 l 256 379 l 12 738 l 157 737 l 336 473 l 516 738 l 661 738 l 412 380 l 675 0 "},"μ":{x_min:0,x_max:696.609375,ha:747,o:"m 696 -4 q 628 -14 657 -14 q 498 97 513 -14 q 422 8 470 41 q 313 -24 374 -24 q 207 3 258 -24 q 120 80 157 31 l 120 -278 l 0 -278 l 0 738 l 124 738 l 124 343 q 165 172 124 246 q 308 82 216 82 q 451 177 402 82 q 492 358 492 254 l 492 738 l 616 738 l 616 214 q 623 136 616 160 q 673 92 636 92 q 696 95 684 92 l 696 -4 "},h:{x_min:0,x_max:615,ha:724,o:"m 615 472 l 615 0 l 490 0 l 490 454 q 456 590 490 535 q 338 654 416 654 q 186 588 251 654 q 122 436 122 522 l 122 0 l 0 0 l 0 1013 l 122 1013 l 122 633 q 218 727 149 694 q 362 760 287 760 q 552 676 484 760 q 615 472 615 600 "},".":{x_min:0,x_max:142,ha:239,o:"m 142 0 l 0 0 l 0 151 l 142 151 l 142 0 "},"φ":{x_min:-2,x_max:878,ha:974,o:"m 496 -279 l 378 -279 l 378 -17 q 101 88 204 -17 q -2 367 -2 194 q 68 626 -2 510 q 283 758 151 758 l 283 646 q 167 537 209 626 q 133 373 133 462 q 192 177 133 254 q 378 93 259 93 l 378 758 q 445 764 426 763 q 476 765 464 765 q 765 659 653 765 q 878 377 878 553 q 771 96 878 209 q 496 -17 665 -17 l 496 -279 m 496 93 l 514 93 q 687 183 623 93 q 746 380 746 265 q 691 569 746 491 q 522 658 629 658 l 496 656 l 496 93 "},";":{x_min:0,x_max:142,ha:239,o:"m 142 585 l 0 585 l 0 738 l 142 738 l 142 585 m 142 -12 q 105 -132 142 -82 q 0 -206 68 -182 l 0 -138 q 58 -82 43 -123 q 68 0 68 -56 l 0 0 l 0 151 l 142 151 l 142 -12 "},f:{x_min:0,x_max:378,ha:472,o:"m 378 638 l 246 638 l 246 0 l 121 0 l 121 638 l 0 638 l 0 738 l 121 738 q 137 935 121 887 q 290 1028 171 1028 q 320 1027 305 1028 q 378 1021 334 1026 l 378 908 q 323 918 346 918 q 257 870 273 918 q 246 780 246 840 l 246 738 l 378 738 l 378 638 "},"“":{x_min:1,x_max:348.21875,ha:454,o:"m 140 670 l 1 670 l 1 830 q 37 943 1 897 q 140 1011 74 990 l 140 947 q 82 900 97 940 q 68 810 68 861 l 140 810 l 140 670 m 348 670 l 209 670 l 209 830 q 245 943 209 897 q 348 1011 282 990 l 348 947 q 290 900 305 940 q 276 810 276 861 l 348 810 l 348 670 "},A:{x_min:.03125,x_max:906.953125,ha:1008,o:"m 906 0 l 756 0 l 648 303 l 251 303 l 142 0 l 0 0 l 376 1013 l 529 1013 l 906 0 m 610 421 l 452 867 l 293 421 l 610 421 "},6:{x_min:53,x_max:739,ha:792,o:"m 739 312 q 633 62 739 162 q 400 -31 534 -31 q 162 78 257 -31 q 53 439 53 206 q 178 859 53 712 q 441 986 284 986 q 643 912 559 986 q 732 713 732 833 l 601 713 q 544 830 594 786 q 426 875 494 875 q 268 793 331 875 q 193 517 193 697 q 301 597 240 570 q 427 624 362 624 q 643 540 552 624 q 739 312 739 451 m 603 298 q 540 461 603 400 q 404 516 484 516 q 268 461 323 516 q 207 300 207 401 q 269 137 207 198 q 405 83 325 83 q 541 137 486 83 q 603 298 603 197 "},"‘":{x_min:1,x_max:139.890625,ha:236,o:"m 139 670 l 1 670 l 1 830 q 37 943 1 897 q 139 1011 74 990 l 139 947 q 82 900 97 940 q 68 810 68 861 l 139 810 l 139 670 "},"ϊ":{x_min:-70,x_max:283,ha:361,o:"m 283 800 l 173 800 l 173 925 l 283 925 l 283 800 m 40 800 l -70 800 l -70 925 l 40 925 l 40 800 m 283 3 q 232 -10 257 -5 q 181 -15 206 -15 q 84 26 118 -15 q 41 200 41 79 l 41 737 l 166 737 l 167 215 q 171 141 167 157 q 225 101 182 101 q 247 103 238 101 q 283 112 256 104 l 283 3 "},"π":{x_min:-.21875,x_max:773.21875,ha:857,o:"m 773 -7 l 707 -11 q 575 40 607 -11 q 552 174 552 77 l 552 226 l 552 626 l 222 626 l 222 0 l 97 0 l 97 626 l 0 626 l 0 737 l 773 737 l 773 626 l 676 626 l 676 171 q 695 103 676 117 q 773 90 714 90 l 773 -7 "},"ά":{x_min:0,x_max:765.5625,ha:809,o:"m 765 -4 q 698 -14 726 -14 q 564 97 586 -14 q 466 7 525 40 q 337 -26 407 -26 q 88 98 186 -26 q 0 369 0 212 q 88 637 0 525 q 337 760 184 760 q 465 727 407 760 q 563 637 524 695 l 563 738 l 685 738 l 685 222 q 693 141 685 168 q 748 94 708 94 q 765 95 760 94 l 765 -4 m 584 371 q 531 562 584 485 q 360 653 470 653 q 192 566 254 653 q 135 379 135 489 q 186 181 135 261 q 358 84 247 84 q 528 176 465 84 q 584 371 584 260 m 604 1040 l 415 819 l 332 819 l 466 1040 l 604 1040 "},O:{x_min:0,x_max:958,ha:1057,o:"m 485 1041 q 834 882 702 1041 q 958 512 958 734 q 834 136 958 287 q 481 -26 702 -26 q 126 130 261 -26 q 0 504 0 279 q 127 880 0 728 q 485 1041 263 1041 m 480 98 q 731 225 638 98 q 815 504 815 340 q 733 783 815 669 q 480 912 640 912 q 226 784 321 912 q 142 504 142 670 q 226 224 142 339 q 480 98 319 98 "},n:{x_min:0,x_max:615,ha:724,o:"m 615 463 l 615 0 l 490 0 l 490 454 q 453 592 490 537 q 331 656 410 656 q 178 585 240 656 q 117 421 117 514 l 117 0 l 0 0 l 0 738 l 117 738 l 117 630 q 218 728 150 693 q 359 764 286 764 q 552 675 484 764 q 615 463 615 593 "},3:{x_min:54,x_max:737,ha:792,o:"m 737 284 q 635 55 737 141 q 399 -25 541 -25 q 156 52 248 -25 q 54 308 54 140 l 185 308 q 245 147 185 202 q 395 96 302 96 q 539 140 484 96 q 602 280 602 190 q 510 429 602 390 q 324 454 451 454 l 324 565 q 487 584 441 565 q 565 719 565 617 q 515 835 565 791 q 395 879 466 879 q 255 824 307 879 q 203 661 203 769 l 78 661 q 166 909 78 822 q 387 992 250 992 q 603 921 513 992 q 701 723 701 844 q 669 607 701 656 q 578 524 637 558 q 696 434 655 499 q 737 284 737 369 "},9:{x_min:53,x_max:739,ha:792,o:"m 739 524 q 619 94 739 241 q 362 -32 516 -32 q 150 47 242 -32 q 59 244 59 126 l 191 244 q 246 129 191 176 q 373 82 301 82 q 526 161 466 82 q 597 440 597 255 q 363 334 501 334 q 130 432 216 334 q 53 650 53 521 q 134 880 53 786 q 383 986 226 986 q 659 841 566 986 q 739 524 739 719 m 388 449 q 535 514 480 449 q 585 658 585 573 q 535 805 585 744 q 388 873 480 873 q 242 809 294 873 q 191 658 191 745 q 239 514 191 572 q 388 449 292 449 "},l:{x_min:41,x_max:166,ha:279,o:"m 166 0 l 41 0 l 41 1013 l 166 1013 l 166 0 "},"¤":{x_min:40.09375,x_max:728.796875,ha:825,o:"m 728 304 l 649 224 l 512 363 q 383 331 458 331 q 256 363 310 331 l 119 224 l 40 304 l 177 441 q 150 553 150 493 q 184 673 150 621 l 40 818 l 119 898 l 267 749 q 321 766 291 759 q 384 773 351 773 q 447 766 417 773 q 501 749 477 759 l 649 898 l 728 818 l 585 675 q 612 618 604 648 q 621 553 621 587 q 591 441 621 491 l 728 304 m 384 682 q 280 643 318 682 q 243 551 243 604 q 279 461 243 499 q 383 423 316 423 q 487 461 449 423 q 525 553 525 500 q 490 641 525 605 q 384 682 451 682 "},"κ":{x_min:0,x_max:632.328125,ha:679,o:"m 632 0 l 482 0 l 225 384 l 124 288 l 124 0 l 0 0 l 0 738 l 124 738 l 124 446 l 433 738 l 596 738 l 312 466 l 632 0 "},4:{x_min:48,x_max:742.453125,ha:792,o:"m 742 243 l 602 243 l 602 0 l 476 0 l 476 243 l 48 243 l 48 368 l 476 958 l 602 958 l 602 354 l 742 354 l 742 243 m 476 354 l 476 792 l 162 354 l 476 354 "},p:{x_min:0,x_max:685,ha:786,o:"m 685 364 q 598 96 685 205 q 350 -23 504 -23 q 121 89 205 -23 l 121 -278 l 0 -278 l 0 738 l 121 738 l 121 633 q 220 726 159 691 q 351 761 280 761 q 598 636 504 761 q 685 364 685 522 m 557 371 q 501 560 557 481 q 330 651 437 651 q 162 559 223 651 q 108 366 108 479 q 162 177 108 254 q 333 87 224 87 q 502 178 441 87 q 557 371 557 258 "},"‡":{x_min:0,x_max:777,ha:835,o:"m 458 238 l 458 0 l 319 0 l 319 238 l 0 238 l 0 360 l 319 360 l 319 681 l 0 683 l 0 804 l 319 804 l 319 1015 l 458 1013 l 458 804 l 777 804 l 777 683 l 458 683 l 458 360 l 777 360 l 777 238 l 458 238 "},"ψ":{x_min:0,x_max:808,ha:907,o:"m 465 -278 l 341 -278 l 341 -15 q 87 102 180 -15 q 0 378 0 210 l 0 739 l 133 739 l 133 379 q 182 195 133 275 q 341 98 242 98 l 341 922 l 465 922 l 465 98 q 623 195 563 98 q 675 382 675 278 l 675 742 l 808 742 l 808 381 q 720 104 808 213 q 466 -13 627 -13 l 465 -278 "},"η":{x_min:.78125,x_max:697,ha:810,o:"m 697 -278 l 572 -278 l 572 454 q 540 587 572 536 q 425 650 501 650 q 271 579 337 650 q 206 420 206 509 l 206 0 l 81 0 l 81 489 q 73 588 81 562 q 0 644 56 644 l 0 741 q 68 755 38 755 q 158 720 124 755 q 200 630 193 686 q 297 726 234 692 q 434 761 359 761 q 620 692 544 761 q 697 516 697 624 l 697 -278 "}},cssFontWeight:"normal",ascender:1189,underlinePosition:-100,cssFontStyle:"normal",boundingBox:{yMin:-334,xMin:-111,yMax:1189,xMax:1672},resolution:1e3,original_font_information:{postscript_name:"Helvetiker-Regular",version_string:"Version 1.00 2004 initial release",vendor_url:"http://www.magenta.gr/",full_font_name:"Helvetiker",font_family_name:"Helvetiker",copyright:"Copyright (c) Μagenta ltd, 2004",description:"",trademark:"",designer:"",designer_url:"",unique_font_identifier:"Μagenta ltd:Helvetiker:22-10-104",license_url:"http://www.ellak.gr/fonts/MgOpen/license.html",license_description:"Copyright (c) 2004 by MAGENTA Ltd. All Rights Reserved.",manufacturer_name:"Μagenta ltd",font_sub_family_name:"Regular"},descender:-334,familyName:"Helvetiker",lineHeight:1522,underlineThickness:50};function c(){}c.prototype.getSlides=function(e,t,n){let i=function(t,n,l,i,a){return e.stretchIn("y",a,t,n,l,i)},a={x:[-15,15],y:[0,30],z:[-7.5,7.5]},o=function(t){return function(n,l,i,a,o){return e.swipeIn("y",o,n,l,i,a,t)}},r=e.makeAxisHelperXY(),s=e.makeAxisHelperX(),q=e.makeAxisHelperY(),m=(e.makeAxisHelperZ(),e.findGlobalMin1d(e.generatorCurve1d.bind(e),200,a)),h=(e.makeSprite1d(m,"#ff0000"),e.findLocalMinima(e.generatorCurve1d.bind(e),200,a));h.sort(function(e,t){return e[1]-t[1]});let u=e.makeSprite1d(h[0],"#ff0000"),d=e.makeSprite1d(h[1],"#ff0000"),p=e.makeSprite1d(h[2],"#ff0000"),x=e.makeSprite1d(h[3],"#ff0000"),c=e.makeSprite1d(h[4],"#ff0000"),f=e.makeSprite1d(h[5],"#ff0000");u.position.z+=.05,d.position.z+=.05,p.position.z+=.05,x.position.z+=.05,c.position.z+=.05,f.position.z+=.05;let g=e.findLocalMaxima(e.generatorCurve1d.bind(e),200,a);g.sort(function(e,t){return e[1]-t[1]});let _=e.makeSprite1d(g[0],"#0000ff"),w=e.makeSprite1d(g[1],"#0000ff"),v=e.makeSprite1d(g[2],"#0000ff"),y=e.makeSprite1d(g[3],"#0000ff"),b=e.makeSprite1d(g[4],"#0000ff");_.position.z+=.05,w.position.z+=.05,v.position.z+=.05,y.position.z+=.05,b.position.z+=.05;let T=e.make1dCurve(e.generatorCurve1d.bind(e),200,a),A=(e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a),new l.B),k=new l.N(0,1,0);A.setFromAxisAngle(k.normalize(),0);let C=e.makeText("D",n,new l.N(14,-19,0),"#006699"),M=e.makeText("R",n,new l.N(-18,15,0),"#006699"),N=e.makeText("f",n,new l.N(18,-5,0),"#0011aa"),z=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,2,[new l.z(new l.N(1,0,0),-14.3)]),S=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,2,[new l.z(new l.N(1,0,0),-14.05)]),E=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,2,[new l.z(new l.N(1,0,0),-13.2)]),P=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,2,[new l.z(new l.N(1,0,0),-11.3)]),O=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,2,[new l.z(new l.N(1,0,0),-10.8)]),I=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,2,[new l.z(new l.N(1,0,0),-10.18)]),L=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,2,[new l.z(new l.N(1,0,0),-9.85)]),j=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,4,[new l.z(new l.N(-1,0,0),13.2),new l.z(new l.N(1,0,0),-11.3)]),D=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,4,[new l.z(new l.N(-1,0,0),6.52),new l.z(new l.N(1,0,0),-3.95)]),F=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,4,[new l.z(new l.N(-1,0,0),6.89),new l.z(new l.N(1,0,0),-2.9)]),R=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,1,[new l.z(new l.N(-1,0,0),-.3),new l.z(new l.N(1,0,0),5.7)]),H=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,1,[new l.z(new l.N(-1,0,0),.3),new l.z(new l.N(1,0,0),5.87)]),U=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,1,[new l.z(new l.N(-1,0,0),.52),new l.z(new l.N(1,0,0),5.95)]),W=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,1,[new l.z(new l.N(-1,0,0),.72),new l.z(new l.N(1,0,0),6.05)]),Y=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,1,[new l.z(new l.N(-1,0,0),1.15),new l.z(new l.N(1,0,0),6.35)]),B=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,1,[new l.z(new l.N(-1,0,0),1.92),new l.z(new l.N(1,0,0),7.5)]),V=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,1,[new l.z(new l.N(-1,0,0),1.92),new l.z(new l.N(1,0,0),11.62)]),Z=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,1,[new l.z(new l.N(-1,0,0),2.9),new l.z(new l.N(1,0,0),11.92)]),X=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,1,[new l.z(new l.N(-1,0,0),6.89),new l.z(new l.N(1,0,0),11.92)]),G=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,1),K=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,3,[new l.z(new l.N(-1,0,0),-9.38),new l.z(new l.N(1,0,0),10.48)]),J=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,3,[new l.z(new l.N(-1,0,0),-9.18),new l.z(new l.N(1,0,0),10.65)]),Q=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,3,[new l.z(new l.N(-1,0,0),-8.74),new l.z(new l.N(1,0,0),11.02)]),$=e.makeLarge1dCurve(e.generatorCurve1d.bind(e),200,a,3,[new l.z(new l.N(-1,0,0),-7.5),new l.z(new l.N(1,0,0),11.62)]),ee=e.makeGroup();ee.add(z.clone()),ee.add(H.clone());let te=e.makeGroup();te.add(U.clone()),te.add(S.clone()),te.add(K.clone());let ne=e.makeGroup();ne.add(E.clone()),ne.add(j.clone()),ne.add(W.clone()),ne.add(J.clone());let le=e.makeGroup();le.add(P.clone()),le.add(W.clone()),le.add(J.clone()),le.position.z+=.01;let ie=e.makeGroup();ie.add(Y.clone()),ie.add(O.clone()),ie.add(Q.clone());let ae=e.makeGroup();ae.add(B.clone()),ae.add($.clone()),ae.add(D.clone()),ae.add(I.clone());let oe=e.makeGroup();oe.add(V.clone()),oe.add(D.clone()),oe.add(I.clone()),oe.position.z+=.01;let re=e.makeGroup();re.add(Z.clone()),re.add(F.clone()),re.add(L.clone());let se=e.makeGroup();se.add(X.clone()),se.add(L.clone()),se.position.z+=.01;let qe=e.makeGroup();return qe.add(f),qe.add(y),qe.add(b),[{mesh:r,animateIn:function(t,n,l,i,a,o){return e.fadeIn(a,t,n,l,i,o)},opacityMax:.5,explainText:"Persistent homology on an example."},{camera:t,target:{position1:new l.N,position2:new l.N(0,0,100),quaternion1:new l.B,quaternion2:A},transition:function(t,n,l,i,a,o,r){return e.interpolateCamera(a,o,t,n,l,i,e.perlinstep,r)},duration:50,explainText:"Let us consider a function defined on a 1-dimensional domain."},{mesh:s,animateIn:i,explainText:"The domain is represented by the x-axis."},{mesh:C,explainText:"The domain is represented by the x-axis."},{mesh:q,animateIn:i,explainText:"The 1-dimensional function range is represented on the y-axis."},{mesh:M,explainText:"The 1-dimensional function range is represented on the y-axis."},{mesh:T,animateIn:function(t,n,l,i,o){return e.swipeIn("x",o,t,n,l,i,a)},duration:45,explainText:"The function is represented with a piecewise-linear curve. "},{mesh:N,explainText:"The function is represented with a piecewise-linear curve. "},{mesh:u,explainText:"The global minimum of the function is highlighted in red. ",removeAfter:[T]},{mesh:R,removeAfter:[],animateIn:o({y:[-15,-5]}),duration:20,explainText:"Now consider a filtration (a bottom-up swipe) of the function. "},{explainText:"Starting from the lowest value, the filtration contains at first one connected component. "},{mesh:d,explainText:"Until the second local minimum is reached: there are now two connected components. "},{mesh:ee,removeAfter:[R],animateIn:o({y:[-5,-4]}),duration:20,explainText:"Until the second local minimum is reached: there are now two connected components. "},{mesh:p,explainText:"The third minimum is reached. "},{mesh:te,removeAfter:[ee],animateIn:o({y:[-4,-3.2]}),duration:20,explainText:"So the filtration contains three connected components (three separate pieces). "},{mesh:x,explainText:"The fourth local minimum is encountered. "},{mesh:ne,removeAfter:[te],animateIn:o({y:[-3.2,-2.3]}),duration:20,explainText:"Something happens then: two connected components merge into one. "},{mesh:_,explainText:"This corresponds to a local maximum. "},{mesh:le,explainText:"The color of the <b>oldest</b> component is given to the union: this is called the <b>Elder Rule</b>. "},{explainText:"The local maximum where the merging occurs is associated to the local minimum of the <b>youngest</b> merged component. "},{explainText:"Critical points (minima and maxima) are thus associated in pairs. "},{removeAfter:[ne],explainText:"These pairs are called <b>persistence pairs</b>; their value difference is called the <b>persistence</b>. "},{mesh:ie,removeAfter:[le],animateIn:o({y:[-2.3,0]}),duration:20,explainText:"Going on with the swipe... "},{mesh:c,explainText:"... a new local minimum is encountered, which means a new connected component. "},{mesh:ae,removeAfter:[ie],animateIn:o({y:[0,4.2]}),duration:20,explainText:"Go on with the filtration... "},{mesh:w,explainText:"... until, here, a maximum is reached. "},{mesh:oe,removeAfter:[ae],explainText:"According to the <b>Elder Rule</b>, the oldest component absorbs the youngest."},{explainText:"And the maximum is associated with the minimum of the youngest (here, purple) component in a persistence pair. "},{mesh:re,removeAfter:[oe],animateIn:o({y:[4.2,6.8]}),duration:20,explainText:"Continue the bottom-up filtration. This filtrated function is sometimes called a <b>sub-level set</b>. "},{mesh:v,explainText:"Another maximum. "},{mesh:se,removeAfter:[re,se],explainText:"Which means the Elder Rule is invoked again. "},{mesh:G,animateIn:o({y:[6.8,15]}),duration:20,explainText:"In the end, there is only one connected component left. "},{mesh:qe,removeAfter:[r,s,M,C,N,G,u,d,p,x,c,_,w,v,qe],explainText:"And here we have all critical points. Note for this case they are only maxima and minima. "}]};var f=c;function g(){}g.prototype.upperNeighbors=function(e,t,n,l){let i=e[0],a=e[1],o=t(i,a);var r=[];return 0===i?t(i+1,a)>=o&&r.push([i+1,a]):i===n-1?t(i-1,a)>=o&&r.push([i-1,a]):(t(i+1,a)>=o&&r.push([i+1,a]),t(i-1,a)>=o&&r.push([i-1,a])),0===a?t(i,a+1)>=o&&r.push([i,a+1]):a===l-1?t(i,a-1)>=o&&r.push([i,a-1]):(t(i,a+1)>=o&&r.push([i,a+1]),t(i,a-1)>=o&&r.push([i,a-1])),i>0&&a>0&&t(i-1,a-1)>=o&&r.push([i-1,a-1]),i<n-1&&a<l-1&&t(i+1,a+1)>=o&&r.push([i+1,a+1]),r},g.prototype.getCriticalType=function(e,t,n,l,i){let a=i(n,l),o=[i(n+1,l)>a||i(n+1,l)===a&&(n+1)*e+l<n*e+l,i(n+1,l+1)>a||i(n+1,l+1)===a&&(n+1)*e+l+1<n*e+l,i(n,l+1)>a||i(n,l+1)===a&&n*e+l+1<n*e+l,i(n-1,l)>a||i(n-1,l)===a&&(n-1)*e+l<n*e+l,i(n-1,l-1)>a||i(n-1,l-1)===a&&(n-1)*e+l-1<n*e+l,i(n,l-1)>a||i(n,l-1)===a&&n*e+l-1<n*e+l],r=!1,s=!1,q=0,m=0;for(let e=0;e<o.length;++e)o[e]?(0,r||q++,r=!0,s&&(s=!1)):(0,s||m++,s=!0,r&&(r=!1));o[0]?r&&m>0&&q--:s&&q>0&&m--;let h="reg";return 0===q&&m>0&&(h="max"),q>0&&0===m&&(h="min"),q+m>2&&(h="sad"),0===m&&0===q&&console.log("No neighbors?"),m+q>4&&(h="mul"),h},g.prototype.computePersistenceDiagram=function(e,t,n){var l;let i=new Array(e);for(let n=0;n<e;++n)i[n]=new Array(t);let a=[];for(let l=0;l<e;++l)for(let o=0;o<t;++o){let t=n(l,o),r=[n(l+1,o)>t||n(l+1,o)===t&&(l+1)*e+o<l*e+o,n(l+1,o+1)>t||n(l+1,o+1)===t&&(l+1)*e+o+1<l*e+o,n(l,o+1)>t||n(l,o+1)===t&&l*e+o+1<l*e+o,n(l-1,o)>t||n(l-1,o)===t&&(l-1)*e+o<l*e+o,n(l-1,o-1)>t||n(l-1,o-1)===t&&(l-1)*e+o-1<l*e+o,n(l,o-1)>t||n(l,o-1)===t&&l*e+o-1<l*e+o],s=0,q=0,m=!1,h=!1,u=0,d=0;for(let e=0;e<r.length;++e)r[e]?(s++,m||u++,m=!0,h&&(h=!1)):(q++,h||d++,h=!0,m&&(m=!1));r[0]?m&&d>0&&u--:h&&u>0&&d--,0===u&&d>0&&(i[l][o]="max",a.push([l,o,"max",t])),u>0&&0===d&&(i[l][o]="min",a.push([l,o,"min",t])),u+d>2&&(i[l][o]="sad",a.push([l,o,"sad",t])),0===d&&0===u&&console.log("No neighbors?"),d+u>4&&(i[l][o]="mul",console.log("Multi-saddle?")),i[l][o]||(i[l][o]="reg")}a.sort(function(e,t){return e[3]-t[3]}),l=a;let o=0,r=[],s=new Set,q=new Map,m=a[o],h=a[++o];q.set(o,[h]),o++;let u=0,d=a[a.length-1];for(;q.size>0;){let l=Number.MAX_VALUE,m=new Map;for(const o of q.keys()){let h=Number.MIN_VALUE,u=q.get(o),p=a[o],x=i[p[0]][p[1]];s.add(p[0]*e+p[1]);let c=[],f=new Set,g=new Set,_=!1;for(;!_&&u.length>0;){let a=u.shift(),q=a[0]*e+a[1];f.add(q),c=[];let w=this.upperNeighbors(a,n,e,t);if(w.length>0)for(let t=0;t<w.length;++t){let n=w[t],l=n[0]*e+n[1];f.has(l)||s.has(l)||g.has(l)||(g.add(l),c.push(n))}if((u=u.concat(c)).sort(function(e,t){return n(e[0],e[1])-n(t[0],t[1])}),s.has(q))continue;if(a[0]===p[0]&&a[1]===p[1]&&s.add(q),!a){console.log("No more neighbors to visit and no critical point encountered."),m.delete(o),u=[];continue}let v=a,y=n(v[0],v[1]);h=h<y?y:h;let b=v[0]*e+v[1];if(s.has(b))continue;f.add(b),i[v[0]];let T=i[v[0]][v[1]];if("reg"===T||("max"===T?"min"===x?0===o&&v[0]===d[0]&&v[1]===d[1]?(s.add(b),r.push([[p[0],p[1]],[v[0],v[1]]]),_=!0,console.log("Should only happen once: min matched max.")):console.log("Reached a max before a saddle."):"sad"===x&&(s.add(b),r.push([[p[0],p[1]],[v[0],v[1]]]),_=!0):"sad"===T?"min"===x&&(s.add(b),r.push([[p[0],p[1]],[v[0],v[1]]]),_=!0):"min"===T&&console.log("Error: should not have encountered a min.")),_){c=[],u=[];break}u.length>0&&!_?l>h&&(l=h):u=[]}m.delete(o)}for(let t=o;t<a.length;++t){let n=a[t],r=n[0]*e+n[1];if(!s.has(r)){if(n[3]>l&&m.size>0)break;let e=i[n[0]][n[1]];if("max"===e)++u>1&&console.log("A max was not assigned, this should only happen on the border.");else if("min"===e||"sad"===e){o=t,m.has(t)&&console.log("Error: an unvisited critical is already present in the next round starter list."),m.set(t,[a[t]]);break}}}q=m}for(let e=r.length-1;e>=0;--e){let t=r[e],n=t[0],l=t[1];(n[0]===m[0]&&n[1]===m[1]||l[0]===m[0]&&l[1]===m[1]||n[0]===d[0]&&n[1]===d[1]||l[0]===d[0]&&l[1]===d[1])&&r.splice(e,1)}return r.unshift([[m[0],m[1]],[d[0],d[1]]]),[l,r]};var _=g;function w(){}w.prototype.getSlides=function(e,t,n){let i=new l.B,a=new l.N(0,1,0);i.setFromAxisAngle(a.normalize(),Math.PI/2);let o=new l.B,r=new l.N(1,0,0);o.setFromAxisAngle(r.normalize(),-Math.PI/8),i.multiply(o);let s=new l.B,q=new l.N(0,1,0);s.setFromAxisAngle(q.normalize(),Math.PI/2);let m=new l.B,h=new l.N(1,0,0);m.setFromAxisAngle(h.normalize(),-Math.PI/8),s.multiply(m);let u=function(t,n,l,i,a,o,r){return e.interpolateCamera(a,o,t,n,l,i,e.perlinstep,r)},d={x:[-15,15],y:[0,30],z:[-7.5,7.5]},p=function(t,n,l,i,a){return e.swipeIn("z",a,t,n,l,i,{z:[0,30]})},x=function(t){return function(n,l,i,a,o){return e.swipeIn("y",o,n,l,i,a,t)}},c=(e.makeAxisHelperXY(),e.makeAxisHelperX(),e.makeAxisHelperY(),e.makeAxisHelperZ()),f=new l.n,g=e.makeAxisHelperXY(),w=e.make1dCurve(e.generatorCurve1d.bind(e),200,d);e.setOpacity(g,.5),f.add(g),f.add(w);let v=e.makeAxisHelperXZ();v.material.clippingPlanes=[new l.z(new l.N(0,0,1),15)];let y=e.make2dCurve(e.generatorCurve2d.bind(e),128,d);y.material.clippingPlanes=[new l.z(new l.N(0,0,1),15)];let b=e.make2dCurve(e.generatorCurve2d.bind(e),128,d);b.material.clippingPlanes=[new l.z(new l.N(0,-1,0),15)];let T=b.clone(),A=e.make2dCurve(e.generatorCurve2d.bind(e),128,d),k=e.makeText("D",n,new l.N(8,-15,-31),"#006600",new l.i(-Math.PI/2,0,0,"XYZ")),C=e.makeText("R",n,new l.N(-16,15,4),"#006600",new l.i(0,Math.PI/2,0,"XYZ")),M=new l.n;M.add(k),M.add(C);let N=e.make2dCurve(e.generatorCurve2d.bind(e),128,d),z=e.make2dCurveWireframeColor(e.generatorCurve2d.bind(e),128,d,100,55),S=e.make2dCurveWireframeColor(e.generatorCurve2d.bind(e),128,d,115,78),E=e.make2dCurveWireframeColor(e.generatorCurve2d.bind(e),128,d,110,67),P=e.make2dCurveWireframeColor(e.generatorCurve2d.bind(e),128,d,110,41),O=e.make2dCurveWireframeColor(e.generatorCurve2d.bind(e),128,d,99,77),I=e.make2dCurveWireframeColor(e.generatorCurve2d.bind(e),128,d,63,60),L=e.make2dCurveWireframeColor(e.generatorCurve2d.bind(e),128,d,75,55),j=new _,D=e.generatorCurve2d.bind(e),F=e.evaluateFromExpressionAndExtent2d,R=e.evaluatePointFromExpressionAndExtent2d,H=j.computePersistenceDiagram(128,128,F(D,d,128,128)),U=H[0],W=H[1],Y=R(D,d,128,128),B=Y(100,55),V=e.makeSprite1d(B,"#ff0000",!0),Z=Y(115,78),X=e.makeSprite1d(Z,"#ff0000",!0),G=Y(110,67),K=e.makeSprite1d(G,"#ffffff",!0),J=Y(110,41),Q=e.makeSprite1d(J,"#ffffff",!0),$=Y(99,77),ee=e.makeSprite1d($,"#0000ff",!0),te=Y(63,60),ne=e.makeSprite1d(te,"#0000ff",!0),le=Y(75,55),ie=e.makeSprite1d(le,"#000000",!0);ie.position.x+=.3,ie.position.y-=.3;let ae=[],oe=[],re=[];for(let e=0;e<U.length;++e){let t=U[e],n=Y(t[0],t[1]);switch(t[2]){case"min":ae.push(n);break;case"max":oe.push(n);break;case"sad":re.push(n)}}let se=new l.n,qe=new l.n,me=new l.n;for(let t=0;t<ae.length;++t)se.add(e.makeSprite1d(ae[t],"#ff0000",!0));for(let t=0;t<oe.length;++t)qe.add(e.makeSprite1d(oe[t],"#0000ff",!0));for(let t=0;t<re.length;++t)me.add(e.makeSprite1d(re[t],"#aaaaaa",!0));let he=new l.n;he.add(z),he.add(S);let ue=new l.n;ue.add(O),ue.add(I);let de=new l.n;de.add(E),de.add(P);let pe=new l.n;pe.add(ee),pe.add(ne);let xe=new l.n;xe.add(K),xe.add(Q);let ce=new l.n;ce.add(V),ce.add(X);let fe=new l.n;for(let t=0;t<W.length;++t){let n=W[t],l=n[0],i=n[1],a=Y(l[0],l[1]),o=Y(i[0],i[1]),r=e.makeLargeSegment(a,o);fe.add(r)}return[{mesh:w,explainText:"Critical points are assembled in <b>persistence</b> pairs, which are min-max pairs for 1-dimensional domains. "},{explainText:"<b>Persistent homology</b> studies this set of persistence pairs, sometimes represented in plots called persistence diagrams. "},{camera:t,target:{position1:new l.N,position2:new l.N(55,20,-15),quaternion1:new l.B,quaternion2:i,controlTarget:new l.N(5,0,-15)},transition:u,duration:50,explainText:"Let us see how this extends to two dimensions. "},{mesh:c,animateIn:function(t,n,l,i,a){return e.stretchIn("y",a,t,n,l,i)},explainText:"So let us add a dimension to our domain. "},{mesh:v,animateIn:p,opacityMax:.5,explainText:"So let us add a dimension to our domain. "},{mesh:M,explainText:"So let us add a dimension to our domain. "},{mesh:y,animateIn:p,duration:50,removeAfter:[y],explainText:"And let us extend the function to this domain. "},{mesh:N,opacityMax:.1,explainText:"The function is computationally represented by a piecewise-linear mesh. "},{camera:t,target:{position1:new l.N,position2:new l.N(25,5,-15),quaternion1:new l.B,quaternion2:s,controlTarget:new l.N(5,-5,-15)},transition:u,duration:50,explainText:"Let us examine critical points. "},{mesh:he,explainText:"Local minima can be detected due to their neighborhood only showing higher values. "},{mesh:ce,removeAfter:[he],explainText:"Local minima can be detected due to their neighborhood only showing higher values. "},{mesh:b,animateIn:x({y:[-15,.1]}),duration:90,removeAfter:[ce],explainText:"Local minima can be detected due to their neighborhood only showing higher values. "},{camera:t,target:{position1:new l.N,position2:new l.N(25,5,-12.5),quaternion1:new l.B,quaternion2:s,controlTarget:new l.N(5,-5,-12.5)},transition:u,duration:50,explainText:"But there are other types of critical points: <b>saddles</b>. "},{mesh:de,explainText:"In the neighborhood of saddles, higher points and lower points are disconnected in more than two groups (here, four). "},{mesh:xe,removeAfter:[de],explainText:"In the neighborhood of saddles, higher points and lower points are disconnected in more than two groups (here, four). "},{camera:t,target:{position1:new l.N,position2:new l.N(55,20,-15),quaternion1:new l.B,quaternion2:s,controlTarget:new l.N(5,0,-15)},transition:u,duration:50,explainText:"Then, as for the 1-dimensional case, there are local maxima. "},{mesh:T,animateIn:x({y:[.1,5]}),duration:90,removeAfter:[xe,b],explainText:"Then, as for the 1-dimensional case, there are local maxima. "},{mesh:ue,explainText:"Maxima have neighborhoods with only lower points. "},{mesh:pe,removeAfter:[ue],explainText:"Maxima have neighborhoods with only lower points. "},{mesh:b,animateIn:x({y:[5,15]}),duration:90,removeAfter:[pe,T],explainText:"Maxima have neighborhoods with only lower points. "},{mesh:L,explainText:"Any other point has a neighborhood which is cut in exactly two pieces: one higher, one lower. "},{mesh:ie,removeAfter:[ie,L,b],explainText:"These are called regular points. "},{removeAfter:[]},{mesh:se,explainText:"These are all minima... "},{mesh:qe,explainText:"... all maxima... "},{mesh:me,explainText:"... and all saddles. "},{mesh:fe,explainText:"As in the previous case, critical points are associated in pairs by analyzing merging events of the sub-level filtration. "},{explainText:"Here we show min-saddle and saddle-max pairs. Every point belongs to exactly one pair. "},{removeAfter:[fe,N,se,qe,me],explainText:"(there are also saddle-saddle pairs)"},{mesh:y,removeAfter:[y,w],explainText:"This extends smoothly to 3 dimensions. "},{mesh:A,animate:function(t,n,l){e.updateCurve2dt(l,t,n,e.generatorCurve2d.bind(e),128)},explainText:"But another interesting question asks the evolution of persistent homology classes for time-varying functions. "},{removeAfter:[A],explainText:"For instance, tracking persistence pairs throughout time is an interesting perspective of this subject. "},{explainText:"Thank you for reading! "}]};var v=w;let y,b,T,A,k,C;function M(){T.aspect=window.innerWidth/window.innerHeight,T.updateProjectionMatrix(),k.setSize(window.innerWidth,window.innerHeight)}function N(){requestAnimationFrame(N),b.begin(),C.update(),k.render(A,T),b.end()}var z;let S=null;S=new l.k(x),function(){y=document.createElement("div"),document.body.appendChild(y),(k=new l.P({antialias:!0})).setPixelRatio(window.devicePixelRatio),k.setSize(window.innerWidth,window.innerHeight),k.localClippingEnabled=!0,y.appendChild(k.domElement),b=new o.a,(A=new l.D).background=new l.f(16777215),(T=new l.y(45,window.innerWidth/window.innerHeight,1,2e3)).position.x=0,T.position.y=0,T.position.z=200;let e=new a(T,k.domElement);e.target.copy(new l.N(0,0,-15)),window.addEventListener("resize",M,!1);let t=new l.a(6710886);A.add(t);let n=new l.g(8943462);n.position.set(1,1,1).normalize(),A.add(n);var i=new l.o(16777215,16777215,1);A.add(i);let r=new l.c(5);r.position.y=-15,r.position.x=16,r.position.z=0;let s=document.getElementById("explainer-text");C=new p(A,T,e,s),window.addEventListener("keydown",C.onKeyDown.bind(C),!1),document.getElementById("rightbutton").addEventListener("click",()=>C.onKeyDown({keyCode:39}),!1),document.getElementById("leftbutton").addEventListener("click",()=>C.onKeyDown({keyCode:37}),!1),z=new u;let q=new f,m=new v,h=q.getSlides(z,T,S),d=m.getSlides(z,T,S);C.addSlides(h),C.addSlides(d)}(),N()}},[[8,1,2]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,